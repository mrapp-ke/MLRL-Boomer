---
name: Build documentation
on:
  workflow_call:
    inputs:
      apidoc_cpp:
        required: false
        type: boolean
      apidoc_python:
        required: false
        type: boolean
      doc:
        required: false
        type: boolean
        default: true
      sphinx_builder:
        required: false
        type: string
        default: html
      ccache_key:
        required: false
        type: string
      release:
        required: false
        type: boolean
env:
  RELEASE: ${{ inputs.release == true }}
  GPU_SUPPORT: disabled
jobs:
  build_doc:
    if: ${{ inputs.apidoc_cpp == true || inputs.apidoc_python == true || inputs.doc == true }}
    name: Build documentation
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Determine supported Python versions
        id: python_version
        run: echo "python_version=$(sed s/,//g python/.version-python)" >> $GITHUB_OUTPUT
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ steps.python_version.outputs.python_version }}
          check-latest: true
      - name: Prepare ccache
        if: ${{ inputs.ccache_key }}
        uses: hendrikmuhs/ccache-action@v1
        with:
          key: ${{ inputs.ccache_key }}
      - name: Install Doxygen
        uses: ssciwr/doxygen-install@v1
      - name: Generate C++ Apidoc
        if: ${{ inputs.apidoc_cpp == true && inputs.doc != true }}
        run: ./build apidoc_cpp
      - name: Generate Python Apidoc
        if: ${{ inputs.apidoc_python == true && inputs.doc != true }}
        run: ./build apidoc_python
      - name: Install Roboto font
        if: ${{ inputs.doc == true }}
        run: sudo apt install -y fonts-roboto
      - name: Generate token
        if: ${{ inputs.doc == true }}
        uses: actions/create-github-app-token@v2
        id: app-token
        with:
          app-id: ${{ secrets.TOKEN_APP_ID }}
          private-key: ${{ secrets.TOKEN_APP_SECRET }}
      - name: Generate documentation
        if: ${{ inputs.doc == true }}
        env:
          SPHINX_BUILDER: ${{ inputs.sphinx_builder }}
          GIT_BRANCH: ${{ github.head_ref || github.ref_name }}
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
        run: ./build doc
      - name: Upload documentation as artifact
        if: ${{ inputs.doc == true && inputs.sphinx_builder == 'html' }}
        uses: actions/upload-artifact@v4
        with:
          name: doc
          path: doc/_build/
          if-no-files-found: error
