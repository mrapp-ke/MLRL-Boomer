---
name: Publish macOS wheels
on:
  workflow_call:
    inputs:
      subproject:
        required: true
        type: string
      release:
        required: false
        type: boolean
env:
  SUBPROJECTS: ${{ inputs.subproject }}
  RELEASE: ${{ inputs.release == true }}
  TEST_SUPPORT: disabled
  GPU_SUPPORT: disabled
jobs:
  publish_macos_wheels:
    name: Publish ${{ inputs.subproject }} (macOS)
    runs-on: macos-15
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Determine supported Python versions
        uses: juliangruber/read-file-action@v1
        id: python_version
        with:
          path: python/.version-python
      - name: Build package
        uses: pypa/cibuildwheel@v2.23
        env:
          CIBW_BEFORE_ALL: GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }} ./build dependency_libomp
          CIBW_BEFORE_BUILD: rm -rf .venv && ./build --clean && CPLUS_INCLUDE_PATH=/Users/runner/work/MLRL-Boomer/MLRL-Boomer/libomp/include/
            LIBRARY_PATH=/Users/runner/work/MLRL-Boomer/MLRL-Boomer/libomp/lib/ ./build pyproject_toml
          CIBW_REPAIR_WHEEL_COMMAND: DYLD_LIBRARY_PATH=/Users/runner/work/MLRL-Boomer/MLRL-Boomer/libomp/lib/ delocate-wheel  --require-archs
            {delocate_archs} -w {dest_dir} -v {wheel}
          CIBW_BUILD_FRONTEND: build
          CIBW_ARCHS: auto64
          CIBW_SKIP: pp*
          CIBW_PROJECT_REQUIRES_PYTHON: ${{ steps.python_version.outputs.content }}
        with:
          package-dir: python/subprojects/${{ inputs.subproject }}/
      - name: Upload wheels as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ inputs.subproject }}-${{ runner.os }}-${{ runner.arch }}
          path: wheelhouse/*.whl
          if-no-files-found: error
