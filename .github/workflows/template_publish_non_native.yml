---
name: Publish non-native platform wheels
on:
  workflow_call:
    inputs:
      subproject:
        required: true
        type: string
      python_version:
        required: true
        type: string
      dev_release:
        required: false
        type: boolean
      pypi_repository:
        required: false
        type: string
    secrets:
      pypi_username:
        required: false
      pypi_password:
        required: false
jobs:
  publish_non_native_wheels:
    name: Publish ${{ inputs.subproject }} (non-native)
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set version
        if: ${{ inputs.dev_release == true }}
        run: ./build apply_development_version
      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all
      - name: Build package
        uses: pypa/cibuildwheel@v2.17
        env:
          CIBW_BEFORE_BUILD_LINUX: ./build --clean && SUBPROJECTS=${{ inputs.subproject }} TEST_SUPPORT=disabled GPU_SUPPORT=disabled
            ./build install
          CIBW_BUILD_FRONTEND: build
          CIBW_ARCHS_LINUX: aarch64
          CIBW_SKIP: pp* *musllinux*
          CIBW_PROJECT_REQUIRES_PYTHON: ${{ inputs.python_version }}
        with:
          package-dir: python/subprojects/${{ inputs.subproject }}/
      - name: Setup Python
        if: ${{ inputs.pypi_repository }}
        uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Upload wheels to PyPI
        if: ${{ inputs.pypi_repository }}
        env:
          TWINE_USERNAME: ${{ secrets.pypi_username }}
          TWINE_PASSWORD: ${{ secrets.pypi_password }}
          TWINE_REPOSITORY: ${{ inputs.pypi_repository }}
        run: |
          python -m pip install twine
          python -m twine upload --non-interactive --skip-existing wheelhouse/*
      - name: Upload wheels as artifacts
        if: ${{ inputs.pypi_repository }}
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ inputs.subproject }}-${{ runner.os }}-aarch64
          path: wheelhouse/*.whl
          if-no-files-found: error
