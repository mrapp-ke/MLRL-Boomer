---
name: Merge into upstream branches
on:
  release:
    types:
      - published
jobs:
  merge_release:
    name: Merge into upstream branches
    runs-on: ubuntu-24.04
    steps:
      - name: Generate token
        uses: actions/create-github-app-token@v2
        id: app-token
        with:
          app-id: ${{ secrets.TOKEN_APP_ID }}
          private-key: ${{ secrets.TOKEN_APP_SECRET }}
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ steps.app-token.outputs.token }}
      - name: Setup git
        uses: fregante/setup-git-user@v2
      - name: Checkout release branch
        run: |
          git switch ${{ github.event.release.target_commitish }}
      - name: Reset development version
        if: ${{ github.event.release.target_commitish == 'main' }}
        run: |
          ./build reset_development_version
          git add build_system/res/versioning/version-dev
          git commit -m "[Bot] Update development version to $(cat build_system/res/versioning/version-dev)."
          git push origin main
      - name: Merge into feature branch
        if: ${{ github.event.release.target_commitish == 'main' }}
        run: |
          git switch -c feature origin/feature
          git merge origin/main --strategy-option theirs -m "[Bot] Merge branch \"main\" into \"feature\"."
          git push origin feature
      - name: Merge into bugfix branch
        if: ${{ github.event.release.target_commitish == 'main' || github.event.release.target_commitish == 'feature' }}
        run: |
          git switch -c bugfix origin/bugfix
          git merge origin/feature --strategy-option theirs -m "[Bot] Merge branch \"feature\" into \"bugfix\"."
          git push origin bugfix
      - name: Update major version
        if: ${{ github.event.release.target_commitish == 'main' }}
        id: main-release
        run: |
          git switch main
          export MAIN_VERSION="$(cat build_system/res/versioning/version)"
          ./build increment_major_version
          git add build_system/res/versioning/version
          git commit -m "[Bot] Update version from ${MAIN_VERSION} to $(cat build_system/res/versioning/version)."
          git push origin main
          git switch feature
          export FEATURE_VERSION="$(cat build_system/res/versioning/version)"
          ./build increment_minor_version
          git add build_system/res/versioning/version
          git commit -m "[Bot] Update version to from ${FEATURE_VERSION} $(cat build_system/res/versioning/version)."
          git push origin feature
          git switch bugfix
          export BUGFIX_VERSION="$(cat build_system/res/versioning/version)"
          ./build increment_patch_version
          git add build_system/res/versioning/version
          git commit -m "[Bot] Update version from ${BUGFIX_VERSION} to $(cat build_system/res/versioning/version)."
          git push origin bugfix
          echo "MAIN_VERSION=$MAIN_VERSION" >> $GITHUB_OUTPUT
          echo "FEATURE_VERSION=$FEATURE_VERSION" >> $GITHUB_OUTPUT
          echo "BUGFIX_VERSION=$BUGFIX_VERSION" >> $GITHUB_OUTPUT
      - name: Update minor version
        if: ${{ github.event.release.target_commitish == 'feature' }}
        id: feature-release
        run: |
          git switch feature
          export FEATURE_VERSION="$(cat build_system/res/versioning/version)"
          ./build increment_minor_version
          git add build_system/res/versioning/version
          git commit -m "[Bot] Update version from ${FEATURE_VERSION} to $(cat build_system/res/versioning/version)."
          git push origin feature
          git switch bugfix
          export BUGFIX_VERSION="$(cat build_system/res/versioning/version)"
          ./build increment_patch_version
          git add build_system/res/versioning/version
          git commit -m "[Bot] Update version from ${BUGFIX_VERSION} to $(cat build_system/res/versioning/version)."
          git push origin bugfix
          echo "FEATURE_VERSION=$FEATURE_VERSION" >> $GITHUB_OUTPUT
          echo "BUGFIX_VERSION=$BUGFIX_VERSION" >> $GITHUB_OUTPUT
      - name: Update patch version
        if: ${{ github.event.release.target_commitish == 'bugfix' }}
        id: bugfix-release
        run: |-
          git switch bugfix
          export BUGFIX_VERSION="$(cat build_system/res/versioning/version)"
          ./build increment_patch_version
          git add build_system/res/versioning/version
          git commit -m "[Bot] Update version from ${BUGFIX_VERSION} to $(cat build_system/res/versioning/version)."
          git push origin bugfix
          echo "BUGFIX_VERSION=$BUGFIX_VERSION" >> $GITHUB_OUTPUT
      - name: Close major milestone
        uses: Beakyn/gha-close-milestone@v1.1.1
        if: ${{ steps.main-release.outputs.MAIN_VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          repository: ${{ github.repository }}
          milestone-title: ${{ steps.main-release.outputs.MAIN_VERSION }}
      - name: Close minor milestone
        uses: Beakyn/gha-close-milestone@v1.1.1
        if: ${{ steps.main-release.outputs.FEATURE_VERSION || steps.feature-release.outputs.FEATURE_VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          repository: ${{ github.repository }}
          milestone-title: ${{ steps.main-release.outputs.FEATURE_VERSION || steps.feature-release.outputs.FEATURE_VERSION }}
      - name: Close patch milestone
        uses: Beakyn/gha-close-milestone@v1.1.1
        if: ${{ steps.main-release.outputs.BUGFIX_VERSION || steps.feature-release.outputs.BUGFIX_VERSION || steps.bugfix-release.outputs.BUGFIX_VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          repository: ${{ github.repository }}
          milestone-title: ${{ steps.main-release.outputs.BUGFIX_VERSION || steps.feature-release.outputs.BUGFIX_VERSION || steps.bugfix-release.outputs.BUGFIX_VERSION }}
