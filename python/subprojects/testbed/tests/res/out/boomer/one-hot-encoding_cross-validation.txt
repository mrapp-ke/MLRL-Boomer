INFO Starting experiment...
INFO Performing full 10-fold cross validation...
DEBUG Parsing meta data from file "python/subprojects/testbed/tests/res/data/enron.xml"...
DEBUG Loading data set from file "python/subprojects/testbed/tests/res/data/enron.arff"...
INFO Data set contains 1001 nominal and 0 numerical attributes.
INFO Applying one-hot encoding...
INFO Original data set contained 1001 attributes, one-hot encoded data set contains 2002 attributes
INFO Fold 1 / 10:
INFO Fitting model to 1531 training examples...
DEBUG A dense matrix is used to store the feature values of the training examples
DEBUG A sparse matrix is used to store the labels of the training examples
INFO Successfully fit model in 0.7720194419998734 seconds
INFO Predicting for 171 test examples...
DEBUG A dense matrix is used to store the feature values of the query examples
DEBUG A sparse matrix is used to store the predicted labels
INFO Successfully predicted in 0.0028308290002314607 seconds
INFO Evaluation result on test data (Fold 1):

Example-wise F1         40.58
Example-wise Jaccard    28.37
Example-wise Precision  60.53
Example-wise Recall     33.32
Hamming Accuracy        94.46
Hamming Loss             5.54
Macro F1                21.98
Macro Jaccard           19.79
Macro Precision         94.09
Macro Recall            21.3
Micro F1                44.96
Micro Jaccard           29
Micro Precision         62.31
Micro Recall            35.16
Subset 0/1 Loss         98.83
Subset Accuracy          1.17

INFO Fold 2 / 10:
INFO Fitting model to 1531 training examples...
DEBUG A dense matrix is used to store the feature values of the training examples
DEBUG A sparse matrix is used to store the labels of the training examples
INFO Successfully fit model in 0.7930052489991795 seconds
INFO Predicting for 171 test examples...
DEBUG A dense matrix is used to store the feature values of the query examples
DEBUG A sparse matrix is used to store the predicted labels
INFO Successfully predicted in 0.0029462170004990185 seconds
INFO Evaluation result on test data (Fold 2):

Example-wise F1         46.37
Example-wise Jaccard    34.16
Example-wise Precision  61.71
Example-wise Recall     41.06
Hamming Accuracy        94.83
Hamming Loss             5.17
Macro F1                23.04
Macro Jaccard           20.89
Macro Precision         96.84
Macro Recall            22.54
Micro F1                49.41
Micro Jaccard           32.81
Micro Precision         64.15
Micro Recall            40.18
Subset 0/1 Loss         97.08
Subset Accuracy          2.92

INFO Fold 3 / 10:
INFO Fitting model to 1532 training examples...
DEBUG A dense matrix is used to store the feature values of the training examples
DEBUG A sparse matrix is used to store the labels of the training examples
INFO Successfully fit model in 0.8463567070011777 seconds
INFO Predicting for 170 test examples...
DEBUG A dense matrix is used to store the feature values of the query examples
DEBUG A sparse matrix is used to store the predicted labels
INFO Successfully predicted in 0.0029433039999275934 seconds
INFO Evaluation result on test data (Fold 3):

Example-wise F1         41.88
Example-wise Jaccard    30.13
Example-wise Precision  74.61
Example-wise Recall     33.79
Hamming Accuracy        94.81
Hamming Loss             5.19
Macro F1                25.12
Macro Jaccard           22.72
Macro Precision         92.57
Macro Recall            23.85
Micro F1                46.58
Micro Jaccard           30.36
Micro Precision         70.83
Micro Recall            34.69
Subset 0/1 Loss         97.06
Subset Accuracy          2.94

INFO Fold 4 / 10:
INFO Fitting model to 1532 training examples...
DEBUG A dense matrix is used to store the feature values of the training examples
DEBUG A sparse matrix is used to store the labels of the training examples
INFO Successfully fit model in 0.8201136240004416 seconds
INFO Predicting for 170 test examples...
DEBUG A dense matrix is used to store the feature values of the query examples
DEBUG A sparse matrix is used to store the predicted labels
INFO Successfully predicted in 0.0029042109999863897 seconds
INFO Evaluation result on test data (Fold 4):

Example-wise F1         46.82
Example-wise Jaccard    34.68
Example-wise Precision  62.3
Example-wise Recall     41.18
Hamming Accuracy        95.01
Hamming Loss             4.99
Macro F1                24.1
Macro Jaccard           21.27
Macro Precision         94.05
Macro Recall            22.9
Micro F1                50
Micro Jaccard           33.33
Micro Precision         64.29
Micro Recall            40.91
Subset 0/1 Loss         97.06
Subset Accuracy          2.94

INFO Fold 5 / 10:
INFO Fitting model to 1532 training examples...
DEBUG A dense matrix is used to store the feature values of the training examples
DEBUG A sparse matrix is used to store the labels of the training examples
INFO Successfully fit model in 0.8075330690007831 seconds
INFO Predicting for 170 test examples...
DEBUG A dense matrix is used to store the feature values of the query examples
DEBUG A sparse matrix is used to store the predicted labels
INFO Successfully predicted in 0.0029626760006067343 seconds
INFO Evaluation result on test data (Fold 5):

Example-wise F1         41.25
Example-wise Jaccard    29.21
Example-wise Precision  62.5
Example-wise Recall     33.77
Hamming Accuracy        94.53
Hamming Loss             5.47
Macro F1                26.28
Macro Jaccard           24.18
Macro Precision         93.38
Macro Recall            27.58
Micro F1                45.52
Micro Jaccard           29.47
Micro Precision         63.78
Micro Recall            35.4
Subset 0/1 Loss         98.82
Subset Accuracy          1.18

INFO Fold 6 / 10:
INFO Fitting model to 1532 training examples...
DEBUG A dense matrix is used to store the feature values of the training examples
DEBUG A sparse matrix is used to store the labels of the training examples
INFO Successfully fit model in 0.8148865929997555 seconds
INFO Predicting for 170 test examples...
DEBUG A dense matrix is used to store the feature values of the query examples
DEBUG A sparse matrix is used to store the predicted labels
INFO Successfully predicted in 0.00295687200014072 seconds
INFO Evaluation result on test data (Fold 6):

Example-wise F1         40.29
Example-wise Jaccard    28.54
Example-wise Precision  58.87
Example-wise Recall     33.55
Hamming Accuracy        94.72
Hamming Loss             5.28
Macro F1                22.5
Macro Jaccard           20.14
Macro Precision         95.5
Macro Recall            22.11
Micro F1                45.79
Micro Jaccard           29.69
Micro Precision         60.91
Micro Recall            36.68
Subset 0/1 Loss         98.82
Subset Accuracy          1.18

INFO Fold 7 / 10:
INFO Fitting model to 1532 training examples...
DEBUG A dense matrix is used to store the feature values of the training examples
DEBUG A sparse matrix is used to store the labels of the training examples
INFO Successfully fit model in 0.7370251410011406 seconds
INFO Predicting for 170 test examples...
DEBUG A dense matrix is used to store the feature values of the query examples
DEBUG A sparse matrix is used to store the predicted labels
INFO Successfully predicted in 0.002846987999873818 seconds
INFO Evaluation result on test data (Fold 7):

Example-wise F1         42.51
Example-wise Jaccard    30.67
Example-wise Precision  56.76
Example-wise Recall     38.12
Hamming Accuracy        94.59
Hamming Loss             5.41
Macro F1                24.07
Macro Jaccard           21.7
Macro Precision         94.97
Macro Recall            23.75
Micro F1                47.46
Micro Jaccard           31.12
Micro Precision         61.62
Micro Recall            38.6
Subset 0/1 Loss         98.24
Subset Accuracy          1.76

INFO Fold 8 / 10:
INFO Fitting model to 1532 training examples...
DEBUG A dense matrix is used to store the feature values of the training examples
DEBUG A sparse matrix is used to store the labels of the training examples
INFO Successfully fit model in 0.7892195589993207 seconds
INFO Predicting for 170 test examples...
DEBUG A dense matrix is used to store the feature values of the query examples
DEBUG A sparse matrix is used to store the predicted labels
INFO Successfully predicted in 0.00289493099990068 seconds
INFO Evaluation result on test data (Fold 8):

Example-wise F1         40.3
Example-wise Jaccard    30.03
Example-wise Precision  80.83
Example-wise Recall     32.14
Hamming Accuracy        94.88
Hamming Loss             5.12
Macro F1                27.06
Macro Jaccard           24.74
Macro Precision         95.52
Macro Recall            25.74
Micro F1                45.96
Micro Jaccard           29.83
Micro Precision         77.17
Micro Recall            32.72
Subset 0/1 Loss         95.88
Subset Accuracy          4.12

INFO Fold 9 / 10:
INFO Fitting model to 1532 training examples...
DEBUG A dense matrix is used to store the feature values of the training examples
DEBUG A sparse matrix is used to store the labels of the training examples
INFO Successfully fit model in 0.8167340719992353 seconds
INFO Predicting for 170 test examples...
DEBUG A dense matrix is used to store the feature values of the query examples
DEBUG A sparse matrix is used to store the predicted labels
INFO Successfully predicted in 0.0029043880003882805 seconds
INFO Evaluation result on test data (Fold 9):

Example-wise F1         40.31
Example-wise Jaccard    28.94
Example-wise Precision  56.35
Example-wise Recall     34.64
Hamming Accuracy        94.35
Hamming Loss             5.65
Macro F1                22.33
Macro Jaccard           20.05
Macro Precision         93.71
Macro Recall            21.86
Micro F1                44.25
Micro Jaccard           28.41
Micro Precision         57.88
Micro Recall            35.82
Subset 0/1 Loss         97.06
Subset Accuracy          2.94

INFO Fold 10 / 10:
INFO Fitting model to 1532 training examples...
DEBUG A dense matrix is used to store the feature values of the training examples
DEBUG A sparse matrix is used to store the labels of the training examples
INFO Successfully fit model in 0.8285513480004738 seconds
INFO Predicting for 170 test examples...
DEBUG A dense matrix is used to store the feature values of the query examples
DEBUG A sparse matrix is used to store the predicted labels
INFO Successfully predicted in 0.0029437560006044805 seconds
INFO Evaluation result on test data (Fold 10):

Example-wise F1         37.48
Example-wise Jaccard    26.81
Example-wise Precision  79.31
Example-wise Recall     28.69
Hamming Accuracy        94.74
Hamming Loss             5.26
Macro F1                26.09
Macro Jaccard           24
Macro Precision         95.08
Macro Recall            24.75
Micro F1                42.75
Micro Jaccard           27.19
Micro Precision         76.29
Micro Recall            29.7
Subset 0/1 Loss         97.65
Subset Accuracy          2.35

INFO Overall evaluation result on test data:

Example-wise F1         41.78  ±2.72
Example-wise Jaccard    30.15  ±2.37
Example-wise Precision  65.38  ±8.78
Example-wise Recall     35.03  ±3.75
Hamming Accuracy        94.69  ±0.19
Hamming Loss             5.31  ±0.19
Macro F1                24.26  ±1.72
Macro Jaccard           21.95  ±1.75
Macro Precision         94.57  ±1.18
Macro Recall            23.64  ±1.84
Micro F1                46.27  ±2.11
Micro Jaccard           30.12  ±1.79
Micro Precision         65.92  ±6.24
Micro Recall            35.98  ±3.19
Subset 0/1 Loss         97.65  ±0.95
Subset Accuracy          2.35  ±0.95

INFO Successfully finished after 8.924344366998412 seconds