mlrl-testbed mlrl.seco --log-level debug --base-dir python/tests/res/tmp --data-dir python/tests/res/data --dataset emotions --result-dir results --save-evaluation true --head-type partial --lift-function kln --print-model-characteristics true
Starting experiment using the classification algorithm "SeCoClassifier"...
Writing output data to file "python/tests/res/tmp/metadata.yml"...
Using separate training and test sets...
Reading input data from file "python/tests/res/data/emotions.arff"...
Parsing meta-data from file "python/tests/res/data/emotions.xml"...
Fitting model to 397 training examples...
A dense matrix is used to store the feature values of the training examples
A dense matrix is used to store the labels of the training examples
Successfully fit model in <duration>
Predicting for 196 test examples...
A dense matrix is used to store the feature values of the query examples
A dense matrix is used to store the predicted labels
Successfully predicted in <duration>
Evaluation result for test data:

Example-wise F1 (↑)         55.05
Example-wise Jaccard (↑)    46.16
Example-wise Precision (↑)  66.34
Example-wise Recall (↑)     59.86
Hamming Accuracy (↑)        74.49
Hamming Loss (↓)            25.51
Macro F1 (↑)                52.66
Macro Jaccard (↑)           38.66
Macro Precision (↑)         52.21
Macro Recall (↑)            56.23
Micro F1 (↑)                59.89
Micro Jaccard (↑)           42.75
Micro Precision (↑)         60.05
Micro Recall (↑)            59.73
Subset 0/1 Loss (↓)         79.08
Subset Accuracy (↑)         20.92

Writing output data to file "python/tests/res/tmp/results/evaluation_test.csv"...
Model characteristics:

┌───────────────────────────────┬─────────┬─────────────────────────┬────────────────────────┬───────────────────────┬──────────────────────┬───────────────────────┬───────────────────────┐
│ Statistics about conditions   │   Total │   Numerical <= operator │   Numerical > operator │   Ordinal <= operator │   Ordinal > operator │   Nominal == operator │   Nominal != operator │
├───────────────────────────────┼─────────┼─────────────────────────┼────────────────────────┼───────────────────────┼──────────────────────┼───────────────────────┼───────────────────────┤
│ Default rule                  │       0 │                   0.00% │                  0.00% │                 0.00% │                0.00% │                 0.00% │                 0.00% │
│ 64 local rules                │      71 │                  47.89% │                 52.11% │                 0.00% │                0.00% │                 0.00% │                 0.00% │
└───────────────────────────────┴─────────┴─────────────────────────┴────────────────────────┴───────────────────────┴──────────────────────┴───────────────────────┴───────────────────────┘

┌────────────────────────────────┬─────────┬────────────┬────────────┐
│ Statistics about predictions   │   Total │   Positive │   Negative │
├────────────────────────────────┼─────────┼────────────┼────────────┤
│ Default rule                   │       6 │      0.00% │    100.00% │
│ 64 local rules                 │      71 │    100.00% │      0.00% │
└────────────────────────────────┴─────────┴────────────┴────────────┘

┌─────────────────────────────┬───────────┬───────────┬───────────┐
│ Statistics per local rule   │   Minimum │   Average │   Maximum │
├─────────────────────────────┼───────────┼───────────┼───────────┤
│ Conditions                  │         1 │      1.11 │         3 │
│ Predictions                 │         1 │      1.11 │         3 │
└─────────────────────────────┴───────────┴───────────┴───────────┘

Successfully finished experiment after <duration>
