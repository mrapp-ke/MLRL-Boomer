mlrl-testbed mlrl.seco --log-level debug --data-dir python/tests/res/data --dataset emotions --base-dir python/tests/res/tmp --result-dir results --save-evaluation true --heuristic laplace
Starting experiment using the classification algorithm "SeCoClassifier"...
Using separate training and test sets...
Reading input data from file "python/tests/res/data/emotions.arff"...
Parsing meta-data from file "python/tests/res/data/emotions.xml"...
Fitting model to 397 training examples...
A dense matrix is used to store the feature values of the training examples
A dense matrix is used to store the labels of the training examples
Successfully fit model in <duration>
Predicting for 196 test examples...
A dense matrix is used to store the feature values of the query examples
A dense matrix is used to store the predicted labels
Successfully predicted in <duration>
Evaluation result for test data:

Example-wise F1         51.46
Example-wise Jaccard    42.28
Example-wise Precision  64.27
Example-wise Recall     57.4
Hamming Accuracy        72.28
Hamming Loss            27.72
Macro F1                53.27
Macro Jaccard           37.99
Macro Precision         54.13
Macro Recall            53.74
Micro F1                56.76
Micro Jaccard           39.63
Micro Precision         56.46
Micro Recall            57.07
Subset 0/1 Loss         84.18
Subset Accuracy         15.82

Writing output data to file "python/tests/res/tmp/results/evaluation_test.csv"...
Successfully finished experiment after <duration>
