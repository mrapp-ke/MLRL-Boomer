mlrl-testbed mlrl.seco --log-level DEBUG --data-dir python/tests/res/data --dataset emotions --output-dir python/tests/res/tmp/results --feature-binning equal-frequency --feature-format sparse
INFO Starting experiment using the classification algorithm "SeCoClassifier"...
INFO Using separate training and test sets...
DEBUG Reading input data from file "python/tests/res/data/emotions.arff"...
DEBUG Parsing meta-data from file "python/tests/res/data/emotions.xml"...
INFO Fitting model to 397 training examples...
DEBUG A sparse matrix with sparse value 0.0 is used to store the feature values of the training examples
DEBUG A dense matrix is used to store the labels of the training examples
INFO Successfully fit model in <duration>
INFO Predicting for 196 test examples...
DEBUG A sparse matrix with sparse value 0.0 is used to store the feature values of the query examples
DEBUG A dense matrix is used to store the predicted labels
INFO Successfully predicted in <duration>
INFO Evaluation result for test data:

Example-wise F1         56.56
Example-wise Jaccard    46.98
Example-wise Precision  63.29
Example-wise Recall     61.99
Hamming Accuracy        74.23
Hamming Loss            25.77
Macro F1                52.79
Macro Jaccard           38.87
Macro Precision         52.53
Macro Recall            57.85
Micro F1                59.87
Micro Jaccard           42.72
Micro Precision         59.47
Micro Recall            60.27
Subset 0/1 Loss         80.1
Subset Accuracy         19.9

DEBUG Writing output data to file "python/tests/res/tmp/results/evaluation_test.csv"...
INFO Successfully finished after <duration>
