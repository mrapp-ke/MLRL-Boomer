mlrl-testbed mlrl.seco --log-level debug --data-dir python/tests/res/data --dataset emotions --base-dir python/tests/res/tmp --result-dir results --save-evaluation true --output-sampling without-replacement
Starting experiment using the classification algorithm "SeCoClassifier"...
Using separate training and test sets...
Reading input data from file "python/tests/res/data/emotions.arff"...
Parsing meta-data from file "python/tests/res/data/emotions.xml"...
Fitting model to 397 training examples...
A dense matrix is used to store the feature values of the training examples
A dense matrix is used to store the labels of the training examples
Successfully fit model in <duration>
Predicting for 196 test examples...
A dense matrix is used to store the feature values of the query examples
A dense matrix is used to store the predicted labels
Successfully predicted in <duration>
Evaluation result for test data:

Example-wise F1         50.52
Example-wise Jaccard    42.05
Example-wise Precision  65.64
Example-wise Recall     55.19
Hamming Accuracy        73.38
Hamming Loss            26.62
Macro F1                56.44
Macro Jaccard           40.25
Macro Precision         61.52
Macro Recall            53.55
Micro F1                56.71
Micro Jaccard           39.58
Micro Precision         58.91
Micro Recall            54.67
Subset 0/1 Loss         83.16
Subset Accuracy         16.84

Writing output data to file "python/tests/res/tmp/results/evaluation_test.csv"...
Successfully finished after <duration>
