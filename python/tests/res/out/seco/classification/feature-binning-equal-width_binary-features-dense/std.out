mlrl-testbed mlrl.seco --log-level debug --data-dir python/tests/res/data --dataset enron --base-dir python/tests/res/tmp --result-dir results --save-evaluation true --feature-binning equal-width --feature-format dense
Starting experiment using the classification algorithm "SeCoClassifier"...
Using separate training and test sets...
Reading input data from file "python/tests/res/data/enron.arff"...
Parsing meta-data from file "python/tests/res/data/enron.xml"...
Fitting model to 1140 training examples...
A dense matrix is used to store the feature values of the training examples
A sparse matrix is used to store the labels of the training examples
Successfully fit model in <duration>
Predicting for 562 test examples...
A dense matrix is used to store the feature values of the query examples
A sparse matrix is used to store the predicted labels
Successfully predicted in <duration>
Evaluation result for test data:

Example-wise F1         49.99
Example-wise Jaccard    36.58
Example-wise Precision  49.85
Example-wise Recall     56.26
Hamming Accuracy        93.8
Hamming Loss             6.2
Macro F1                13.63
Macro Jaccard           10.15
Macro Precision         84.99
Macro Recall            15.84
Micro F1                53.63
Micro Jaccard           36.64
Micro Precision         51.08
Micro Recall            56.45
Subset 0/1 Loss         99.64
Subset Accuracy          0.36

Writing output data to file "python/tests/res/tmp/results/evaluation_test.csv"...
Successfully finished experiment after <duration>
