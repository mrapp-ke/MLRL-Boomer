mlrl-testbed mlrl.seco --log-level debug --data-dir python/tests/res/data --dataset emotions --output-dir python/tests/res/tmp/results --store-evaluation true --rule-induction top-down-beam-search
INFO Starting experiment using the classification algorithm "SeCoClassifier"...
INFO Using separate training and test sets...
DEBUG Reading input data from file "python/tests/res/data/emotions.arff"...
DEBUG Parsing meta-data from file "python/tests/res/data/emotions.xml"...
INFO Fitting model to 397 training examples...
DEBUG A dense matrix is used to store the feature values of the training examples
DEBUG A dense matrix is used to store the labels of the training examples
INFO Successfully fit model in <duration>
INFO Predicting for 196 test examples...
DEBUG A dense matrix is used to store the feature values of the query examples
DEBUG A dense matrix is used to store the predicted labels
INFO Successfully predicted in <duration>
INFO Evaluation result for test data:

Example-wise F1         51.36
Example-wise Jaccard    42.57
Example-wise Precision  62.53
Example-wise Recall     57.06
Hamming Accuracy        72.53
Hamming Loss            27.47
Macro F1                53.63
Macro Jaccard           38.16
Macro Precision         55.83
Macro Recall            55.44
Micro F1                56.99
Micro Jaccard           39.85
Micro Precision         56.91
Micro Recall            57.07
Subset 0/1 Loss         82.65
Subset Accuracy         17.35

DEBUG Writing output data to file "python/tests/res/tmp/results/evaluation_test.csv"...
INFO Successfully finished after <duration>
