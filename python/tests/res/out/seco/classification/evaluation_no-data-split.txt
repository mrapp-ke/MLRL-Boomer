testbed mlrl.seco --log-level DEBUG --data-dir python/tests/res/data --dataset emotions --data-split none --output-dir python/tests/res/tmp/results --print-evaluation true --store-evaluation true
INFO Starting experiment using the classification algorithm "seco"...
WARNING Not using separate training and test sets. The model will be evaluated on the training data...
DEBUG Parsing meta-data from file "python/tests/res/data/emotions.xml"...
DEBUG Loading data set from file "python/tests/res/data/emotions.arff"...
INFO Fitting model to 593 training examples...
DEBUG A dense matrix is used to store the feature values of the training examples
DEBUG A dense matrix is used to store the labels of the training examples
INFO Successfully fit model in <duration>
INFO Predicting for 593 training examples...
DEBUG A dense matrix is used to store the feature values of the query examples
DEBUG A dense matrix is used to store the predicted labels
INFO Successfully predicted in <duration>
INFO Evaluation result for training data:

Example-wise F1         66.41
Example-wise Jaccard    57.36
Example-wise Precision  75.11
Example-wise Recall     69.59
Hamming Accuracy        81.51
Hamming Loss            18.49
Macro F1                61.59
Macro Jaccard           49.23
Macro Precision         78.61
Macro Recall            65.96
Micro F1                69.84
Micro Jaccard           53.66
Micro Precision         70.95
Micro Recall            68.77
Subset 0/1 Loss         70.66
Subset Accuracy         29.34

INFO Successfully finished after <duration>
