mlrl-testbed mlrl.seco --log-level debug --base-dir python/tests/res/tmp --data-dir python/tests/res/data --dataset emotions --result-dir results --save-evaluation true --data-split train-test --print-evaluation false --save-evaluation false --print-data-characteristics true --save-data-characteristics true
Starting experiment using the classification algorithm "SeCoClassifier"...
Writing output data to file "python/tests/res/tmp/metadata.yml"...
Using separate training and test sets...
Reading input data from file "python/tests/res/data/emotions.arff"...
Parsing meta-data from file "python/tests/res/data/emotions.xml"...
Data characteristics:

Examples                397
Features                 72
Numerical Features       72
Ordinal Features          0
Nominal Features          0
Feature Density          99.67
Feature Sparsity          0.33
Outputs                   6
Output Density           30.77
Output Sparsity          69.23
Label Imbalance Ratio     1.45
Label Cardinality         1.85
Distinct Label Vectors   23

Writing output data to file "python/tests/res/tmp/results/data_characteristics.csv"...
Fitting model to 397 training examples...
A dense matrix is used to store the feature values of the training examples
A dense matrix is used to store the labels of the training examples
Successfully fit model in <duration>
Successfully finished experiment after <duration>
