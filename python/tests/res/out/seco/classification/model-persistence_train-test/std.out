mlrl-testbed mlrl.seco --log-level debug --data-dir python/tests/res/data --dataset emotions --output-dir python/tests/res/tmp/results --save-evaluation true --data-split train-test --model-load-dir python/tests/res/tmp/models --save-models true --model-save-dir python/tests/res/tmp/models
INFO Starting experiment using the classification algorithm "SeCoClassifier"...
INFO Using separate training and test sets...
DEBUG Reading input data from file "python/tests/res/data/emotions.arff"...
DEBUG Parsing meta-data from file "python/tests/res/data/emotions.xml"...
DEBUG Reading input data from file "python/tests/res/tmp/models/model.pickle"...
INFO Successfully loaded model
INFO Predicting for 196 test examples...
DEBUG A dense matrix is used to store the feature values of the query examples
DEBUG A dense matrix is used to store the predicted labels
INFO Successfully predicted in <duration>
INFO Evaluation result for test data:

Example-wise F1         53.72
Example-wise Jaccard    44.55
Example-wise Precision  63.06
Example-wise Recall     59.18
Hamming Accuracy        72.96
Hamming Loss            27.04
Macro F1                50.95
Macro Jaccard           36.98
Macro Precision         64.57
Macro Recall            56.59
Micro F1                58.16
Micro Jaccard           41
Micro Precision         57.4
Micro Recall            58.93
Subset 0/1 Loss         81.63
Subset Accuracy         18.37

DEBUG Writing output data to file "python/tests/res/tmp/results/evaluation_test.csv"...
DEBUG Writing output data to file "python/tests/res/tmp/models/model.pickle"...
INFO Successfully finished after <duration>
