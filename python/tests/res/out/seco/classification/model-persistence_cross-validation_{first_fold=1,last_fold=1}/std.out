mlrl-testbed mlrl.seco --log-level debug --data-dir python/tests/res/data --dataset emotions --output-dir python/tests/res/tmp/results --save-evaluation true --data-split cross-validation{first_fold=1,last_fold=1} --model-load-dir python/tests/res/tmp/models --save-models true --model-save-dir python/tests/res/tmp/models
INFO Starting experiment using the classification algorithm "SeCoClassifier"...
INFO Performing fold 1 of 10-fold cross validation...
INFO Fold 1 / 10:
DEBUG Reading input data from file "python/tests/res/data/emotions.arff"...
DEBUG Parsing meta-data from file "python/tests/res/data/emotions.xml"...
DEBUG Reading input data from file "python/tests/res/tmp/models/model_fold-1.pickle"...
INFO Successfully loaded model
INFO Predicting for 60 test examples...
DEBUG A dense matrix is used to store the feature values of the query examples
DEBUG A dense matrix is used to store the predicted labels
INFO Successfully predicted in <duration>
INFO Evaluation result for test data (Fold 1):

Example-wise F1         56.63
Example-wise Jaccard    46.67
Example-wise Precision  68.33
Example-wise Recall     60.56
Hamming Accuracy        74.72
Hamming Loss            25.28
Macro F1                54.04
Macro Jaccard           40.46
Macro Precision         74.52
Macro Recall            57.15
Micro F1                60.61
Micro Jaccard           43.48
Micro Precision         61.4
Micro Recall            59.83
Subset 0/1 Loss         81.67
Subset Accuracy         18.33

DEBUG Writing output data to file "python/tests/res/tmp/results/evaluation_test_fold-1.csv"...
DEBUG Writing output data to file "python/tests/res/tmp/models/model_fold-1.pickle"...
INFO Successfully finished after <duration>
