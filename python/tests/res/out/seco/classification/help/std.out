mlrl-testbed mlrl.seco --help
usage: mlrl-testbed [-r RUNNABLE] [-v] [--base-dir BASE_DIR]
                    [--create-dirs CREATE_DIRS] [--data-dir DATA_DIR]
                    [--data-split DATA_SPLIT] [--dataset DATASET]
                    [--exit-on-error EXIT_ON_ERROR]
                    [--feature-binning FEATURE_BINNING]
                    [--feature-format FEATURE_FORMAT]
                    [--feature-sampling FEATURE_SAMPLING]
                    [--head-type HEAD_TYPE] [--heuristic HEURISTIC]
                    [--holdout HOLDOUT]
                    [--incremental-evaluation INCREMENTAL_EVALUATION]
                    [--instance-sampling INSTANCE_SAMPLING]
                    [--lift-function LIFT_FUNCTION]
                    [--load-models LOAD_MODELS]
                    [--load-parameters LOAD_PARAMETERS]
                    [--log-level LOG_LEVEL] [--max-rules MAX_RULES]
                    [--model-load-dir MODEL_LOAD_DIR]
                    [--model-save-dir MODEL_SAVE_DIR]
                    [--one-hot-encoding ONE_HOT_ENCODING]
                    [--output-format OUTPUT_FORMAT]
                    [--output-sampling OUTPUT_SAMPLING]
                    [--parallel-prediction PARALLEL_PREDICTION]
                    [--parallel-rule-refinement PARALLEL_RULE_REFINEMENT]
                    [--parallel-statistic-update PARALLEL_STATISTIC_UPDATE]
                    [--parameter-load-dir PARAMETER_LOAD_DIR]
                    [--parameter-save-dir PARAMETER_SAVE_DIR]
                    [--post-optimization POST_OPTIMIZATION]
                    [--predict-for-test-data PREDICT_FOR_TEST_DATA]
                    [--predict-for-training-data PREDICT_FOR_TRAINING_DATA]
                    [--prediction-format PREDICTION_FORMAT]
                    [--prediction-type PREDICTION_TYPE]
                    [--print-data-characteristics PRINT_DATA_CHARACTERISTICS]
                    [--print-evaluation PRINT_EVALUATION]
                    [--print-ground-truth PRINT_GROUND_TRUTH]
                    [--print-label-vectors PRINT_LABEL_VECTORS]
                    [--print-model-characteristics PRINT_MODEL_CHARACTERISTICS]
                    [--print-parameters PRINT_PARAMETERS]
                    [--print-prediction-characteristics PRINT_PREDICTION_CHARACTERISTICS]
                    [--print-predictions PRINT_PREDICTIONS]
                    [--print-rules PRINT_RULES] [--problem-type PROBLEM_TYPE]
                    [--pruning-heuristic PRUNING_HEURISTIC]
                    [--random-state RANDOM_STATE] [--result-dir RESULT_DIR]
                    [--rule-induction RULE_INDUCTION]
                    [--rule-pruning RULE_PRUNING]
                    [--save-data-characteristics SAVE_DATA_CHARACTERISTICS]
                    [--save-evaluation SAVE_EVALUATION]
                    [--save-ground-truth SAVE_GROUND_TRUTH]
                    [--save-label-vectors SAVE_LABEL_VECTORS]
                    [--save-model-characteristics SAVE_MODEL_CHARACTERISTICS]
                    [--save-models SAVE_MODELS]
                    [--save-parameters SAVE_PARAMETERS]
                    [--save-prediction-characteristics SAVE_PREDICTION_CHARACTERISTICS]
                    [--save-predictions SAVE_PREDICTIONS]
                    [--save-rules SAVE_RULES]
                    [--sparse-feature-value SPARSE_FEATURE_VALUE]
                    [--time-limit TIME_LIMIT]
                    [--wipe-result-dir WIPE_RESULT_DIR] [-h]
                    runnable_module_or_source_file

A command line utility for training and evaluating machine learning algorithms

positional arguments:
  runnable_module_or_source_file
                        The Python module or source file of the program that
                        should be run

options:
  -r, --runnable RUNNABLE
                        The Python class name of the program that should be
                        run
  -v, --version         Display information about the program.
  --base-dir BASE_DIR   If relative paths to directories, where files should
                        be saved, are given, they are considered relative to
                        the directory specified via this argument.
  --create-dirs CREATE_DIRS
                        Whether the directories, where files should be saved,
                        should be created automatically, if they do not exist,
                        or not. Must be one of {"false", "true"}.
  --data-dir DATA_DIR   The path to the directory where the dataset files are
                        located.
  --data-split DATA_SPLIT
                        The strategy to be used for splitting the available
                        data into training and test sets. Must be one of
                        {"cross-validation", "none", "train-test"}. For
                        additional options refer to the documentation.
  --dataset DATASET     The name of the dataset.
  --exit-on-error EXIT_ON_ERROR
                        Whether the program should exit if an error occurs
                        while writing experimental results or not. Must be one
                        of {"false", "true"}.
  --feature-binning FEATURE_BINNING
                        The name of the strategy to be used for feature
                        binning. Must be one of {"equal-frequency", "equal-
                        width", "none"}. For additional options refer to the
                        documentation.
  --feature-format FEATURE_FORMAT
                        The format to be used for the representation of the
                        feature matrix. Must be one of {"auto", "dense",
                        "sparse"}.
  --feature-sampling FEATURE_SAMPLING
                        The name of the strategy to be used for feature
                        sampling. Must be one of {"none", "without-
                        replacement"}. For additional options refer to the
                        documentation.
  --head-type HEAD_TYPE
                        The type of the rule heads that should be used. Must
                        be one of {"partial", "single"}.
  --heuristic HEURISTIC
                        The name of the heuristic to be used for learning
                        rules. Must be one of {"accuracy", "f-measure",
                        "laplace", "m-estimate", "precision", "recall",
                        "weighted-relative-accuracy"}. For additional options
                        refer to the documentation.
  --holdout HOLDOUT     The name of the strategy to be used for creating a
                        holdout set. Must be one of {"none", "random",
                        "stratified-example-wise", "stratified-output-wise"}.
                        For additional options refer to the documentation.
  --incremental-evaluation INCREMENTAL_EVALUATION
                        Whether models should be evaluated repeatedly, using
                        only a subset of the induced rules with increasing
                        size, or not. Must be one of {"false", "true"}. For
                        additional options refer to the documentation.
  --instance-sampling INSTANCE_SAMPLING
                        The name of the strategy to be used for instance
                        sampling. Must be one of {"none", "stratified-example-
                        wise", "stratified-output-wise", "with-replacement",
                        "without-replacement"}. For additional options refer
                        to the documentation.
  --lift-function LIFT_FUNCTION
                        The lift function to be used for the induction of
                        multi-label rules. Must be one of {"kln", "none",
                        "peak"}. For additional options refer to the
                        documentation.
  --load-models LOAD_MODELS
                        Whether models should be loaded from input files or
                        not. Must be one of {"false", "true"}.
  --load-parameters LOAD_PARAMETERS
                        Whether parameters should be loaded from input files
                        or not. Must be one of {"false", "true"}.
  --log-level LOG_LEVEL
                        The log level to be used. Must be one of {"critical",
                        "debug", "error", "info", "notset", "warn"}.
  --max-rules MAX_RULES
                        The maximum number of rules to be induced. Must be at
                        least 1 or 0, if the number of rules should not be
                        restricted
  --model-load-dir MODEL_LOAD_DIR
                        The path to the directory from which models should be
                        loaded.
  --model-save-dir MODEL_SAVE_DIR
                        The path to the directory where models should be
                        saved.
  --one-hot-encoding ONE_HOT_ENCODING
                        Whether one-hot-encoding should be used to encode
                        nominal features or not. Must be one of {"false",
                        "true"}.
  --output-format OUTPUT_FORMAT
                        The format to be used for the representation of the
                        output matrix. Must be one of {"auto", "dense",
                        "sparse"}.
  --output-sampling OUTPUT_SAMPLING
                        The name of the strategy to be used for output
                        sampling. Must be one of {"none", "round-robin",
                        "without-replacement"}. For additional options refer
                        to the documentation.
  --parallel-prediction PARALLEL_PREDICTION
                        Whether predictions for different examples should be
                        obtained in parallel or not. Must be one of {"false",
                        "true"}. For additional options refer to the
                        documentation.
  --parallel-rule-refinement PARALLEL_RULE_REFINEMENT
                        Whether potential refinements of rules should be
                        searched for in parallel or not. Must be one of
                        {"false", "true"}. For additional options refer to the
                        documentation.
  --parallel-statistic-update PARALLEL_STATISTIC_UPDATE
                        Whether the statistics for different examples should
                        be updated in parallel or not. Must be one of
                        {"false", "true"}. For additional options refer to the
                        documentation.
  --parameter-load-dir PARAMETER_LOAD_DIR
                        The path to the directory from which parameters to be
                        used by the algorithm should be loaded.
  --parameter-save-dir PARAMETER_SAVE_DIR
                        The path to the directory where configuration files,
                        which specify the parameters used by the algorithm,
                        should be saved.
  --post-optimization POST_OPTIMIZATION
                        The method that should be used for post-optimization
                        of a previous learned model. Must be one of {"none",
                        "sequential"}. For additional options refer to the
                        documentation.
  --predict-for-test-data PREDICT_FOR_TEST_DATA
                        Whether predictions should be obtained for the test
                        data or not. Must be one of {"false", "true"}.
  --predict-for-training-data PREDICT_FOR_TRAINING_DATA
                        Whether predictions should be obtained for the
                        training data or not. Must be one of {"false",
                        "true"}.
  --prediction-format PREDICTION_FORMAT
                        The format to be used for the representation of
                        predictions. Must be one of {"auto", "dense",
                        "sparse"}.
  --prediction-type PREDICTION_TYPE
                        The type of predictions that should be obtained from
                        the learner. Must be one of {"binary",
                        "probabilities", "scores"}.
  --print-data-characteristics PRINT_DATA_CHARACTERISTICS
                        Whether the characteristics of the training data
                        should be printed on the console or not. Must be one
                        of {"false", "true"}. For additional options refer to
                        the documentation.
  --print-evaluation PRINT_EVALUATION
                        Whether the evaluation results should be printed on
                        the console or not. Must be one of {"false", "true"}.
                        For additional options refer to the documentation.
  --print-ground-truth PRINT_GROUND_TRUTH
                        Whether the ground truth should be printed on the
                        console or not. Must be one of {"false", "true"}. For
                        additional options refer to the documentation.
  --print-label-vectors PRINT_LABEL_VECTORS
                        Whether the unique label vectors contained in the
                        training data should be printed on the console or not.
                        Must be one of {"false", "true"}. For additional
                        options refer to the documentation.
  --print-model-characteristics PRINT_MODEL_CHARACTERISTICS
                        Whether the characteristics of models should be
                        printed on the console or not. Must be one of
                        {"false", "true"}.
  --print-parameters PRINT_PARAMETERS
                        Whether the parameter setting should be printed on the
                        console or not. Must be one of {"false", "true"}.
  --print-prediction-characteristics PRINT_PREDICTION_CHARACTERISTICS
                        Whether the characteristics of binary predictions
                        should be printed on the console or not. Does only
                        have an effect if the argument --prediction-type is
                        set to binary. Must be one of {"false", "true"}. For
                        additional options refer to the documentation.
  --print-predictions PRINT_PREDICTIONS
                        Whether predictions should be printed on the console
                        or not. Must be one of {"false", "true"}. For
                        additional options refer to the documentation.
  --print-rules PRINT_RULES
                        Whether the induced rules should be printed on the
                        console or not. Must be one of {"false", "true"}. For
                        additional options refer to the documentation.
  --problem-type PROBLEM_TYPE
                        The type of the machine learning problem to be solved.
                        Must be one of {"classification", "regression"}.
  --pruning-heuristic PRUNING_HEURISTIC
                        The name of the heuristic to be used for pruning
                        individual rules. Must be one of {"accuracy",
                        "f-measure", "laplace", "m-estimate", "precision",
                        "recall", "weighted-relative-accuracy"}. For
                        additional options refer to the documentation.
  --random-state RANDOM_STATE
                        The seed to be used by random number generators. Must
                        be at least 1.
  --result-dir RESULT_DIR
                        The path to the directory where experimental results
                        should be saved.
  --rule-induction RULE_INDUCTION
                        The name of the algorithm to be used for the induction
                        of individual rules. Must be one of {"top-down-beam-
                        search", "top-down-greedy"}. For additional options
                        refer to the documentation.
  --rule-pruning RULE_PRUNING
                        The name of the strategy to be used for pruning
                        individual rules. Must be one of {"irep", "none"}.
  --save-data-characteristics SAVE_DATA_CHARACTERISTICS
                        Whether the characteristics of the training data
                        should be written to output files or not. Must be one
                        of {"false", "true"}. For additional options refer to
                        the documentation.
  --save-evaluation SAVE_EVALUATION
                        Whether evaluation results should be written to output
                        files or not. Must be one of {"false", "true"}. For
                        additional options refer to the documentation.
  --save-ground-truth SAVE_GROUND_TRUTH
                        Whether the ground truth should be written to output
                        files or not. Must be one of {"false", "true"}. For
                        additional options refer to the documentation.
  --save-label-vectors SAVE_LABEL_VECTORS
                        Whether the unique label vectors contained in the
                        training data should be written to output files or
                        not. Must be one of {"false", "true"}. For additional
                        options refer to the documentation.
  --save-model-characteristics SAVE_MODEL_CHARACTERISTICS
                        Whether the characteristics of models should be
                        written to output files or not. Must be one of
                        {"false", "true"}.
  --save-models SAVE_MODELS
                        Whether models should be saved to output files or not.
                        Must be one of {"false", "true"}.
  --save-parameters SAVE_PARAMETERS
                        Whether the parameter setting should be written to
                        output files or not. Must be one of {"false", "true"}.
  --save-prediction-characteristics SAVE_PREDICTION_CHARACTERISTICS
                        Whether the characteristics of binary predictions
                        should be written to output files or not. Does only
                        have an effect if the argument --prediction-type is
                        set to binary and if the argument --result-dir is
                        specified. Must be one of {"false", "true"}. For
                        additional options refer to the documentation.
  --save-predictions SAVE_PREDICTIONS
                        Whether predictions should be written to output files
                        or not. Must be one of {"false", "true"}. For
                        additional options refer to the documentation.
  --save-rules SAVE_RULES
                        Whether the induced rules should be written to a text
                        file or not. Must be one of {"false", "true"}. For
                        additional options refer to the documentation.
  --sparse-feature-value SPARSE_FEATURE_VALUE
                        The value that should be used for sparse elements in
                        the feature matrix. Does only have an effect if a
                        sparse format is used for the representation of the
                        feature matrix, depending on the argument --feature-
                        format.
  --time-limit TIME_LIMIT
                        The duration in seconds after which the induction of
                        rules should be canceled. Must be at least 1 or 0, if
                        no time limit should be set
  --wipe-result-dir WIPE_RESULT_DIR
                        Whether all files in the directory specified via the
                        argument --result-dir should be deleted before an
                        experiment starts or not. Must be one of {"false",
                        "true"}.
  -h, --help            Show this help message and exit
