mlrl-testbed mlrl.seco --log-level debug --data-dir python/tests/res/data --dataset emotions --base-dir python/tests/res/tmp --result-dir results --save-evaluation true --feature-binning equal-width --feature-format dense
Starting experiment using the classification algorithm "SeCoClassifier"...
Using separate training and test sets...
Reading input data from file "python/tests/res/data/emotions.arff"...
Parsing meta-data from file "python/tests/res/data/emotions.xml"...
Fitting model to 397 training examples...
A dense matrix is used to store the feature values of the training examples
A dense matrix is used to store the labels of the training examples
Successfully fit model in <duration>
Predicting for 196 test examples...
A dense matrix is used to store the feature values of the query examples
A dense matrix is used to store the predicted labels
Successfully predicted in <duration>
Evaluation result for test data:

Example-wise F1         59.26
Example-wise Jaccard    48.75
Example-wise Precision  59.49
Example-wise Recall     69.73
Hamming Accuracy        72.28
Hamming Loss            27.72
Macro F1                55.97
Macro Jaccard           41.39
Macro Precision         50.93
Macro Recall            67.4
Micro F1                61.56
Micro Jaccard           44.46
Micro Precision         55.18
Micro Recall            69.6
Subset 0/1 Loss         82.14
Subset Accuracy         17.86

Writing output data to file "python/tests/res/tmp/results/evaluation_test.csv"...
Successfully finished after <duration>
