mlrl-testbed mlrl.seco --log-level debug --base-dir python/tests/res/tmp --data-dir python/tests/res/data --dataset emotions-ordinal --result-dir results --save-evaluation true --feature-format dense
Starting experiment using the classification algorithm "SeCoClassifier"...
Using separate training and test sets...
Reading input data from file "python/tests/res/data/emotions-ordinal.arff"...
Parsing meta-data from file "python/tests/res/data/emotions-ordinal.xml"...
Fitting model to 397 training examples...
A dense matrix is used to store the feature values of the training examples
A dense matrix is used to store the labels of the training examples
Successfully fit model in <duration>
Predicting for 196 test examples...
A dense matrix is used to store the feature values of the query examples
A dense matrix is used to store the predicted labels
Successfully predicted in <duration>
Evaluation result for test data:

Example-wise F1         56.95
Example-wise Jaccard    48.17
Example-wise Precision  67.6
Example-wise Recall     60.29
Hamming Accuracy        75.85
Hamming Loss            24.15
Macro F1                54.66
Macro Jaccard           40.39
Macro Precision         69.18
Macro Recall            56.76
Micro F1                61.1
Micro Jaccard           43.98
Micro Precision         62.82
Micro Recall            59.47
Subset 0/1 Loss         78.06
Subset Accuracy         21.94

Writing output data to file "python/tests/res/tmp/results/evaluation_test.csv"...
Successfully finished experiment after <duration>
