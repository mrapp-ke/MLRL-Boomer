mlrl-testbed mlrl.seco --log-level DEBUG --data-dir python/tests/res/data --dataset emotions-nominal --output-dir python/tests/res/tmp/results --feature-binning equal-frequency --feature-format sparse
INFO Starting experiment using the classification algorithm "seco"...
INFO Using separate training and test sets...
DEBUG Loading data set from file "python/tests/res/data/emotions-nominal.arff"...
DEBUG Parsing meta-data from file "python/tests/res/data/emotions-nominal.xml"...
INFO Fitting model to 397 training examples...
DEBUG A sparse matrix with sparse value 0.0 is used to store the feature values of the training examples
DEBUG A dense matrix is used to store the labels of the training examples
INFO Successfully fit model in <duration>
INFO Predicting for 196 test examples...
DEBUG A sparse matrix with sparse value 0.0 is used to store the feature values of the query examples
DEBUG A dense matrix is used to store the predicted labels
INFO Successfully predicted in <duration>
INFO Evaluation result for test data:

Example-wise F1         55.5
Example-wise Jaccard    45.33
Example-wise Precision  60.51
Example-wise Recall     60.29
Hamming Accuracy        72.96
Hamming Loss            27.04
Macro F1                53.08
Macro Jaccard           38.79
Macro Precision         51.13
Macro Recall            57.98
Micro F1                58.81
Micro Jaccard           41.65
Micro Precision         57.18
Micro Recall            60.53
Subset 0/1 Loss         83.67
Subset Accuracy         16.33

DEBUG Writing output data to file "python/tests/res/tmp/results/evaluation_test_overall.csv"...
INFO Successfully finished after <duration>
