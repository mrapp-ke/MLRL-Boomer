mlrl-testbed mlrl.seco --log-level DEBUG --data-dir python/tests/res/data --dataset emotions --output-dir python/tests/res/tmp/results --output-sampling round-robin
INFO Starting experiment using the classification algorithm "seco"...
INFO Using separate training and test sets...
DEBUG Reading input data from file "python/tests/res/data/emotions.arff"...
DEBUG Parsing meta-data from file "python/tests/res/data/emotions.xml"...
INFO Fitting model to 397 training examples...
DEBUG A dense matrix is used to store the feature values of the training examples
DEBUG A dense matrix is used to store the labels of the training examples
INFO Successfully fit model in <duration>
INFO Predicting for 196 test examples...
DEBUG A dense matrix is used to store the feature values of the query examples
DEBUG A dense matrix is used to store the predicted labels
INFO Successfully predicted in <duration>
INFO Evaluation result for test data:

Example-wise F1         53.74
Example-wise Jaccard    44.84
Example-wise Precision  66.16
Example-wise Recall     59.1
Hamming Accuracy        74.06
Hamming Loss            25.94
Macro F1                57.09
Macro Jaccard           41.05
Macro Precision         58.34
Macro Recall            56.74
Micro F1                58.84
Micro Jaccard           41.68
Micro Precision         59.56
Micro Recall            58.13
Subset 0/1 Loss         81.12
Subset Accuracy         18.88

DEBUG Writing output data to file "python/tests/res/tmp/results/evaluation_test.csv"...
INFO Successfully finished after <duration>
