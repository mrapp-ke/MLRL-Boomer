mlrl-testbed mlrl.seco --log-level debug --data-dir python/tests/res/data --dataset emotions --base-dir python/tests/res/tmp --result-dir results --save-evaluation true --heuristic m-estimate
Starting experiment using the classification algorithm "SeCoClassifier"...
Using separate training and test sets...
Reading input data from file "python/tests/res/data/emotions.arff"...
Parsing meta-data from file "python/tests/res/data/emotions.xml"...
Fitting model to 397 training examples...
A dense matrix is used to store the feature values of the training examples
A dense matrix is used to store the labels of the training examples
Successfully fit model in <duration>
Predicting for 196 test examples...
A dense matrix is used to store the feature values of the query examples
A dense matrix is used to store the predicted labels
Successfully predicted in <duration>
Evaluation result for test data:

Example-wise F1         57.48
Example-wise Jaccard    47.95
Example-wise Precision  65.39
Example-wise Recall     62.59
Hamming Accuracy        75.34
Hamming Loss            24.66
Macro F1                59.3
Macro Jaccard           43.48
Macro Precision         60.75
Macro Recall            59.35
Micro F1                61.33
Micro Jaccard           44.23
Micro Precision         61.33
Micro Recall            61.33
Subset 0/1 Loss         80.61
Subset Accuracy         19.39

Writing output data to file "python/tests/res/tmp/results/evaluation_test.csv"...
Successfully finished experiment after <duration>
