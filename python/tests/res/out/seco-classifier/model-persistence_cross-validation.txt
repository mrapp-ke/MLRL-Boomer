INFO Starting experiment using the classification algorithm "seco"...
INFO Performing full 10-fold cross validation...
DEBUG Parsing meta data from file "python/tests/res/data/emotions.xml"...
DEBUG Loading data set from file "python/tests/res/data/emotions.arff"...
INFO Fold 1 / 10:
DEBUG Loading model from file "python/tests/res/tmp/models/seco_fold-1.model"...
INFO Successfully loaded model from file "python/tests/res/tmp/models/seco_fold-1.model"
INFO Predicting for 60 test examples...
DEBUG A dense matrix is used to store the feature values of the query examples
DEBUG A dense matrix is used to store the predicted labels
INFO Successfully predicted in <duration>
INFO Evaluation result for test data (Fold 1):

Example-wise F1         56.63
Example-wise Jaccard    46.67
Example-wise Precision  68.33
Example-wise Recall     60.56
Hamming Accuracy        74.72
Hamming Loss            25.28
Macro F1                54.04
Macro Jaccard           40.46
Macro Precision         74.52
Macro Recall            57.15
Micro F1                60.61
Micro Jaccard           43.48
Micro Precision         61.4
Micro Recall            59.83
Subset 0/1 Loss         81.67
Subset Accuracy         18.33

INFO Fold 2 / 10:
DEBUG Loading model from file "python/tests/res/tmp/models/seco_fold-2.model"...
INFO Successfully loaded model from file "python/tests/res/tmp/models/seco_fold-2.model"
INFO Predicting for 60 test examples...
DEBUG A dense matrix is used to store the feature values of the query examples
DEBUG A dense matrix is used to store the predicted labels
INFO Successfully predicted in <duration>
INFO Evaluation result for test data (Fold 2):

Example-wise F1         51.6
Example-wise Jaccard    43.44
Example-wise Precision  59.86
Example-wise Recall     57.22
Hamming Accuracy        71.67
Hamming Loss            28.33
Macro F1                51.61
Macro Jaccard           36.86
Macro Precision         65.41
Macro Recall            56.21
Micro F1                57.14
Micro Jaccard           40
Micro Precision         57.63
Micro Recall            56.67
Subset 0/1 Loss         81.67
Subset Accuracy         18.33

INFO Fold 3 / 10:
DEBUG Loading model from file "python/tests/res/tmp/models/seco_fold-3.model"...
INFO Successfully loaded model from file "python/tests/res/tmp/models/seco_fold-3.model"
INFO Predicting for 60 test examples...
DEBUG A dense matrix is used to store the feature values of the query examples
DEBUG A dense matrix is used to store the predicted labels
INFO Successfully predicted in <duration>
INFO Evaluation result for test data (Fold 3):

Example-wise F1         55.61
Example-wise Jaccard    46.11
Example-wise Precision  67.22
Example-wise Recall     60
Hamming Accuracy        76.39
Hamming Loss            23.61
Macro F1                54.41
Macro Jaccard           40.73
Macro Precision         70.14
Macro Recall            58.02
Micro F1                61.88
Micro Jaccard           44.81
Micro Precision         63.3
Micro Recall            60.53
Subset 0/1 Loss         81.67
Subset Accuracy         18.33

INFO Fold 4 / 10:
DEBUG Loading model from file "python/tests/res/tmp/models/seco_fold-4.model"...
INFO Successfully loaded model from file "python/tests/res/tmp/models/seco_fold-4.model"
INFO Predicting for 59 test examples...
DEBUG A dense matrix is used to store the feature values of the query examples
DEBUG A dense matrix is used to store the predicted labels
INFO Successfully predicted in <duration>
INFO Evaluation result for test data (Fold 4):

Example-wise F1         52.2
Example-wise Jaccard    43.47
Example-wise Precision  60.17
Example-wise Recall     56.5
Hamming Accuracy        71.75
Hamming Loss            28.25
Macro F1                45.95
Macro Jaccard           32.42
Macro Precision         57.93
Macro Recall            54.2
Micro F1                53.27
Micro Jaccard           36.31
Micro Precision         50.89
Micro Recall            55.88
Subset 0/1 Loss         77.97
Subset Accuracy         22.03

INFO Fold 5 / 10:
DEBUG Loading model from file "python/tests/res/tmp/models/seco_fold-5.model"...
INFO Successfully loaded model from file "python/tests/res/tmp/models/seco_fold-5.model"
INFO Predicting for 59 test examples...
DEBUG A dense matrix is used to store the feature values of the query examples
DEBUG A dense matrix is used to store the predicted labels
INFO Successfully predicted in <duration>
INFO Evaluation result for test data (Fold 5):

Example-wise F1         58.46
Example-wise Jaccard    49.15
Example-wise Precision  66.53
Example-wise Recall     65.82
Hamming Accuracy        77.12
Hamming Loss            22.88
Macro F1                59.68
Macro Jaccard           46.78
Macro Precision         73.17
Macro Recall            66.35
Micro F1                65.53
Micro Jaccard           48.73
Micro Precision         64.17
Micro Recall            66.96
Subset 0/1 Loss         79.66
Subset Accuracy         20.34

INFO Fold 6 / 10:
DEBUG Loading model from file "python/tests/res/tmp/models/seco_fold-6.model"...
INFO Successfully loaded model from file "python/tests/res/tmp/models/seco_fold-6.model"
INFO Predicting for 59 test examples...
DEBUG A dense matrix is used to store the feature values of the query examples
DEBUG A dense matrix is used to store the predicted labels
INFO Successfully predicted in <duration>
INFO Evaluation result for test data (Fold 6):

Example-wise F1         49.98
Example-wise Jaccard    40.73
Example-wise Precision  59.32
Example-wise Recall     55.08
Hamming Accuracy        71.75
Hamming Loss            28.25
Macro F1                48.08
Macro Jaccard           35.09
Macro Precision         63.51
Macro Recall            57.73
Micro F1                53.27
Micro Jaccard           36.31
Micro Precision         51.82
Micro Recall            54.81
Subset 0/1 Loss         86.44
Subset Accuracy         13.56

INFO Fold 7 / 10:
DEBUG Loading model from file "python/tests/res/tmp/models/seco_fold-7.model"...
INFO Successfully loaded model from file "python/tests/res/tmp/models/seco_fold-7.model"
INFO Predicting for 59 test examples...
DEBUG A dense matrix is used to store the feature values of the query examples
DEBUG A dense matrix is used to store the predicted labels
INFO Successfully predicted in <duration>
INFO Evaluation result for test data (Fold 7):

Example-wise F1         56.71
Example-wise Jaccard    47.88
Example-wise Precision  69.92
Example-wise Recall     60.17
Hamming Accuracy        77.12
Hamming Loss            22.88
Macro F1                50.74
Macro Jaccard           37.37
Macro Precision         70.42
Macro Recall            50.56
Micro F1                59.7
Micro Jaccard           42.55
Micro Precision         63.16
Micro Recall            56.6
Subset 0/1 Loss         77.97
Subset Accuracy         22.03

INFO Fold 8 / 10:
DEBUG Loading model from file "python/tests/res/tmp/models/seco_fold-8.model"...
INFO Successfully loaded model from file "python/tests/res/tmp/models/seco_fold-8.model"
INFO Predicting for 59 test examples...
DEBUG A dense matrix is used to store the feature values of the query examples
DEBUG A dense matrix is used to store the predicted labels
INFO Successfully predicted in <duration>
INFO Evaluation result for test data (Fold 8):

Example-wise F1         57.06
Example-wise Jaccard    49.21
Example-wise Precision  67.51
Example-wise Recall     61.3
Hamming Accuracy        77.68
Hamming Loss            22.32
Macro F1                56.77
Macro Jaccard           43.33
Macro Precision         72.29
Macro Recall            62.36
Micro F1                63.26
Micro Jaccard           46.26
Micro Precision         62.96
Micro Recall            63.55
Subset 0/1 Loss         76.27
Subset Accuracy         23.73

INFO Fold 9 / 10:
DEBUG Loading model from file "python/tests/res/tmp/models/seco_fold-9.model"...
INFO Successfully loaded model from file "python/tests/res/tmp/models/seco_fold-9.model"
INFO Predicting for 59 test examples...
DEBUG A dense matrix is used to store the feature values of the query examples
DEBUG A dense matrix is used to store the predicted labels
INFO Successfully predicted in <duration>
INFO Evaluation result for test data (Fold 9):

Example-wise F1         55.76
Example-wise Jaccard    46.89
Example-wise Precision  66.67
Example-wise Recall     58.76
Hamming Accuracy        76.84
Hamming Loss            23.16
Macro F1                53.76
Macro Jaccard           40.05
Macro Precision         72.32
Macro Recall            55.65
Micro F1                62.39
Micro Jaccard           45.33
Micro Precision         64.76
Micro Recall            60.18
Subset 0/1 Loss         81.36
Subset Accuracy         18.64

INFO Fold 10 / 10:
DEBUG Loading model from file "python/tests/res/tmp/models/seco_fold-10.model"...
INFO Successfully loaded model from file "python/tests/res/tmp/models/seco_fold-10.model"
INFO Predicting for 59 test examples...
DEBUG A dense matrix is used to store the feature values of the query examples
DEBUG A dense matrix is used to store the predicted labels
INFO Successfully predicted in <duration>
INFO Evaluation result for test data (Fold 10):

Example-wise F1         57.51
Example-wise Jaccard    50
Example-wise Precision  71.47
Example-wise Recall     61.3
Hamming Accuracy        77.68
Hamming Loss            22.32
Macro F1                52.75
Macro Jaccard           39.98
Macro Precision         54.41
Macro Recall            54.27
Micro F1                62.56
Micro Jaccard           45.52
Micro Precision         65.35
Micro Recall            60
Subset 0/1 Loss         71.19
Subset Accuracy         28.81

INFO Evaluation result for test data (Average across 10 folds):

Example-wise F1         55.15  ±2.71
Example-wise Jaccard    46.36  ±2.84
Example-wise Precision  65.7   ±4.13
Example-wise Recall     59.67  ±2.87
Hamming Accuracy        75.27  ±2.45
Hamming Loss            24.73  ±2.45
Macro F1                52.78  ±3.78
Macro Jaccard           39.31  ±3.89
Macro Precision         67.41  ±6.53
Macro Recall            57.25  ±4.20
Micro F1                59.96  ±3.95
Micro Jaccard           42.93  ±3.97
Micro Precision         60.54  ±5.03
Micro Recall            59.5   ±3.54
Subset 0/1 Loss         79.58  ±3.87
Subset Accuracy         20.42  ±3.87

INFO Successfully finished after <duration>
