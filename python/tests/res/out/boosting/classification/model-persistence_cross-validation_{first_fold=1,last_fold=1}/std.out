mlrl-testbed mlrl.boosting --log-level debug --base-dir python/tests/res/tmp --data-dir python/tests/res/data --dataset emotions --result-dir results --save-evaluation true --data-split cross-validation{first_fold=1,last_fold=1} --save-models true --load-models true --model-load-dir models --model-save-dir models
Starting experiment using the classification algorithm "BoomerClassifier"...
Performing fold 1 of 10-fold cross validation...
Fold 1 / 10:
Reading input data from file "python/tests/res/data/emotions.arff"...
Parsing meta-data from file "python/tests/res/data/emotions.xml"...
Reading input data from file "models/model_fold-1.pickle"...
Failed to unpickle file "models/model_fold-1.pickle"
Fitting model to 533 training examples...
A dense matrix is used to store the feature values of the training examples
A dense matrix is used to store the labels of the training examples
Successfully fit model in <duration>
Predicting for 60 test examples...
A dense matrix is used to store the feature values of the query examples
A dense matrix is used to store the predicted labels
Successfully predicted in <duration>
Evaluation result for test data (Fold 1):

Example-wise F1         64.94
Example-wise Jaccard    57.08
Example-wise Precision  73.61
Example-wise Recall     65.56
Hamming Accuracy        82.22
Hamming Loss            17.78
Macro F1                68.42
Macro Jaccard           53.07
Macro Precision         77.72
Macro Recall            64.44
Micro F1                70.64
Micro Jaccard           54.61
Micro Precision         76.24
Micro Recall            65.81
Subset 0/1 Loss         68.33
Subset Accuracy         31.67

Writing output data to file "python/tests/res/tmp/results/evaluation_test_fold-1.csv"...
Writing output data to file "python/tests/res/tmp/models/model_fold-1.pickle"...
Successfully finished experiment after <duration>
