mlrl-testbed mlrl.boosting --log-level debug --base-dir python/tests/res/tmp --data-dir python/tests/res/data --dataset emotions --result-dir results --save-evaluation true --data-split cross-validation{first_fold=1,last_fold=1} --print-evaluation false --save-evaluation false --print-data-characteristics true --save-data-characteristics true
Starting experiment using the classification algorithm "BoomerClassifier"...
Writing output data to file "python/tests/res/tmp/metadata.yml"...
Performing fold 1 of 10-fold cross validation...
Fold 1 / 10:
Reading input data from file "python/tests/res/data/emotions.arff"...
Parsing meta-data from file "python/tests/res/data/emotions.xml"...
Data characteristics (Fold 1):

Examples                533
Features                 72
Numerical Features       72
Ordinal Features          0
Nominal Features          0
Feature Density          99.67
Feature Sparsity          0.33
Outputs                   6
Output Density           30.99
Output Sparsity          69.01
Label Imbalance Ratio     1.48
Label Cardinality         1.86
Distinct Label Vectors   26

Writing output data to file "python/tests/res/tmp/results/data_characteristics_fold-1.csv"...
Fitting model to 533 training examples...
A dense matrix is used to store the feature values of the training examples
A dense matrix is used to store the labels of the training examples
Successfully fit model in <duration>
Successfully finished experiment after <duration>
