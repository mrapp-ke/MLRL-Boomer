mlrl-testbed mlrl.boosting --log-level debug --data-dir python/tests/res/data --dataset emotions --base-dir python/tests/res/tmp --result-dir results --save-evaluation true --loss logistic-non-decomposable --statistic-type 64-bit
Starting experiment using the classification algorithm "BoomerClassifier"...
Using separate training and test sets...
Reading input data from file "python/tests/res/data/emotions.arff"...
Parsing meta-data from file "python/tests/res/data/emotions.xml"...
Fitting model to 397 training examples...
A dense matrix is used to store the feature values of the training examples
A dense matrix is used to store the labels of the training examples
Successfully fit model in <duration>
Predicting for 196 test examples...
A dense matrix is used to store the feature values of the query examples
A dense matrix is used to store the predicted labels
Successfully predicted in <duration>
Evaluation result for test data:

Example-wise F1         65.48
Example-wise Jaccard    56.97
Example-wise Precision  72.45
Example-wise Recall     65.39
Hamming Accuracy        81.04
Hamming Loss            18.96
Macro F1                66.2
Macro Jaccard           50.58
Macro Precision         73.16
Macro Recall            62.62
Micro F1                68.28
Micro Jaccard           51.84
Micro Precision         73.17
Micro Recall            64
Subset 0/1 Loss         70.41
Subset Accuracy         29.59

Writing output data to file "python/tests/res/tmp/results/evaluation_test.csv"...
Successfully finished after <duration>
