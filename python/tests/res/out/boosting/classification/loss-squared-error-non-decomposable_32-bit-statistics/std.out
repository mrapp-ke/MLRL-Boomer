mlrl-testbed mlrl.boosting --log-level debug --data-dir python/tests/res/data --dataset emotions --output-dir python/tests/res/tmp/results --save-evaluation true --loss squared-error-non-decomposable --statistic-type 32-bit
INFO Starting experiment using the classification algorithm "BoomerClassifier"...
INFO Using separate training and test sets...
DEBUG Reading input data from file "python/tests/res/data/emotions.arff"...
DEBUG Parsing meta-data from file "python/tests/res/data/emotions.xml"...
INFO Fitting model to 397 training examples...
DEBUG A dense matrix is used to store the feature values of the training examples
DEBUG A dense matrix is used to store the labels of the training examples
INFO Successfully fit model in <duration>
INFO Predicting for 196 test examples...
DEBUG A dense matrix is used to store the feature values of the query examples
DEBUG A dense matrix is used to store the predicted labels
INFO Successfully predicted in <duration>
INFO Evaluation result for test data:

Example-wise F1         56.21
Example-wise Jaccard    49.11
Example-wise Precision  61.82
Example-wise Recall     56.21
Hamming Accuracy        77.13
Hamming Loss            22.87
Macro F1                59.84
Macro Jaccard           43.58
Macro Precision         65.24
Macro Recall            55.84
Micro F1                61.18
Micro Jaccard           44.07
Micro Precision         66.67
Micro Recall            56.53
Subset 0/1 Loss         72.45
Subset Accuracy         27.55

DEBUG Writing output data to file "python/tests/res/tmp/results/evaluation_test.csv"...
INFO Successfully finished after <duration>
