mlrl-testbed mlrl.boosting --log-level debug --data-dir python/tests/res/data --dataset emotions --base-dir python/tests/res/tmp --result-dir results --save-evaluation true --loss squared-hinge-decomposable --statistic-type 64-bit
Starting experiment using the classification algorithm "BoomerClassifier"...
Using separate training and test sets...
Reading input data from file "python/tests/res/data/emotions.arff"...
Parsing meta-data from file "python/tests/res/data/emotions.xml"...
Fitting model to 397 training examples...
A dense matrix is used to store the feature values of the training examples
A dense matrix is used to store the labels of the training examples
Successfully fit model in <duration>
Predicting for 196 test examples...
A dense matrix is used to store the feature values of the query examples
A dense matrix is used to store the predicted labels
Successfully predicted in <duration>
Evaluation result for test data:

Example-wise F1         58.81
Example-wise Jaccard    50.95
Example-wise Precision  74.45
Example-wise Recall     60.03
Hamming Accuracy        79.34
Hamming Loss            20.66
Macro F1                63.55
Macro Jaccard           47.02
Macro Precision         71.23
Macro Recall            57.86
Micro F1                64.32
Micro Jaccard           47.4
Micro Precision         71.57
Micro Recall            58.4
Subset 0/1 Loss         74.49
Subset Accuracy         25.51

Writing output data to file "python/tests/res/tmp/results/evaluation_test.csv"...
Successfully finished after <duration>
