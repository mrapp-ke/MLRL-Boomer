mlrl-testbed mlrl.boosting --log-level debug --data-dir python/tests/res/data --dataset emotions --base-dir python/tests/res/tmp --result-dir results --save-evaluation true --loss squared-error-non-decomposable --statistic-type 64-bit
Starting experiment using the classification algorithm "BoomerClassifier"...
Using separate training and test sets...
Reading input data from file "python/tests/res/data/emotions.arff"...
Parsing meta-data from file "python/tests/res/data/emotions.xml"...
Fitting model to 397 training examples...
A dense matrix is used to store the feature values of the training examples
A dense matrix is used to store the labels of the training examples
Successfully fit model in <duration>
Predicting for 196 test examples...
A dense matrix is used to store the feature values of the query examples
A dense matrix is used to store the predicted labels
Successfully predicted in <duration>
Evaluation result for test data:

Example-wise F1         56.02
Example-wise Jaccard    48.53
Example-wise Precision  60.88
Example-wise Recall     56.21
Hamming Accuracy        76.19
Hamming Loss            23.81
Macro F1                59.27
Macro Jaccard           42.77
Macro Precision         63.29
Macro Recall            55.99
Micro F1                60.45
Micro Jaccard           43.32
Micro Precision         64.26
Micro Recall            57.07
Subset 0/1 Loss         73.47
Subset Accuracy         26.53

Writing output data to file "python/tests/res/tmp/results/evaluation_test.csv"...
Successfully finished after <duration>
