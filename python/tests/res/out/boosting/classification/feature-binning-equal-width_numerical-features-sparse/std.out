mlrl-testbed mlrl.boosting --log-level debug --data-dir python/tests/res/data --dataset emotions --output-dir python/tests/res/tmp/results --save-evaluation true --feature-binning equal-width --feature-format sparse
INFO Starting experiment using the classification algorithm "BoomerClassifier"...
INFO Using separate training and test sets...
DEBUG Reading input data from file "python/tests/res/data/emotions.arff"...
DEBUG Parsing meta-data from file "python/tests/res/data/emotions.xml"...
INFO Fitting model to 397 training examples...
DEBUG A sparse matrix with sparse value 0.0 is used to store the feature values of the training examples
DEBUG A dense matrix is used to store the labels of the training examples
INFO Successfully fit model in <duration>
INFO Predicting for 196 test examples...
DEBUG A sparse matrix with sparse value 0.0 is used to store the feature values of the query examples
DEBUG A dense matrix is used to store the predicted labels
INFO Successfully predicted in <duration>
INFO Evaluation result for test data:

Example-wise F1         57.86
Example-wise Jaccard    50.36
Example-wise Precision  79.51
Example-wise Recall     57.99
Hamming Accuracy        80.1
Hamming Loss            19.9
Macro F1                59.39
Macro Jaccard           45.23
Macro Precision         71.99
Macro Recall            55.92
Micro F1                64.86
Micro Jaccard           48
Micro Precision         74.23
Micro Recall            57.6
Subset 0/1 Loss         72.45
Subset Accuracy         27.55

DEBUG Writing output data to file "python/tests/res/tmp/results/evaluation_test.csv"...
INFO Successfully finished after <duration>
