mlrl-testbed mlrl.boosting --log-level debug --base-dir python/tests/res/tmp --data-dir python/tests/res/data --dataset emotions --result-dir results --save-evaluation true --feature-sampling none
Starting experiment using the classification algorithm "BoomerClassifier"...
Using separate training and test sets...
Reading input data from file "python/tests/res/data/emotions.arff"...
Parsing meta-data from file "python/tests/res/data/emotions.xml"...
Fitting model to 397 training examples...
A dense matrix is used to store the feature values of the training examples
A dense matrix is used to store the labels of the training examples
Successfully fit model in <duration>
Predicting for 196 test examples...
A dense matrix is used to store the feature values of the query examples
A dense matrix is used to store the predicted labels
Successfully predicted in <duration>
Evaluation result for test data:

Example-wise F1         61.12
Example-wise Jaccard    53.32
Example-wise Precision  77.98
Example-wise Recall     60.29
Hamming Accuracy        81.21
Hamming Loss            18.79
Macro F1                65
Macro Jaccard           49.06
Macro Precision         76.72
Macro Recall            58.4
Micro F1                66.97
Micro Jaccard           50.34
Micro Precision         76.19
Micro Recall            59.73
Subset 0/1 Loss         71.43
Subset Accuracy         28.57

Writing output data to file "python/tests/res/tmp/results/evaluation_test.csv"...
Successfully finished experiment after <duration>
