mlrl-testbed mlrl.boosting --log-level debug --base-dir python/tests/res/tmp --data-dir python/tests/res/data --dataset emotions --result-dir results --save-evaluation true --loss squared-hinge-non-decomposable --statistic-type 64-bit
Starting experiment using the classification algorithm "BoomerClassifier"...
Using separate training and test sets...
Reading input data from file "python/tests/res/data/emotions.arff"...
Parsing meta-data from file "python/tests/res/data/emotions.xml"...
Fitting model to 397 training examples...
A dense matrix is used to store the feature values of the training examples
A dense matrix is used to store the labels of the training examples
Successfully fit model in <duration>
Predicting for 196 test examples...
A dense matrix is used to store the feature values of the query examples
A dense matrix is used to store the predicted labels
Successfully predicted in <duration>
Evaluation result for test data:

Example-wise F1         58.4
Example-wise Jaccard    51.28
Example-wise Precision  64.97
Example-wise Recall     57.06
Hamming Accuracy        77.47
Hamming Loss            22.53
Macro F1                60.08
Macro Jaccard           43.73
Macro Precision         65.84
Macro Recall            55.46
Micro F1                61.65
Micro Jaccard           44.56
Micro Precision         67.41
Micro Recall            56.8
Subset 0/1 Loss         70.41
Subset Accuracy         29.59

Writing output data to file "python/tests/res/tmp/results/evaluation_test.csv"...
Successfully finished experiment after <duration>
