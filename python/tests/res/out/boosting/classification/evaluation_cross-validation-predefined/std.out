mlrl-testbed mlrl.boosting --log-level debug --data-dir python/tests/res/data --dataset emotions-predefined --base-dir python/tests/res/tmp --result-dir results --save-evaluation true --data-split cross-validation --print-evaluation true --save-evaluation true
INFO Starting experiment using the classification algorithm "BoomerClassifier"...
INFO Performing full 10-fold cross validation...
INFO Fold 1 / 10:
DEBUG Reading input data from file "python/tests/res/data/emotions-predefined_fold-2.arff"...
DEBUG Parsing meta-data from file "python/tests/res/data/emotions-predefined.xml"...
DEBUG Reading input data from file "python/tests/res/data/emotions-predefined_fold-3.arff"...
DEBUG Parsing meta-data from file "python/tests/res/data/emotions-predefined.xml"...
DEBUG Reading input data from file "python/tests/res/data/emotions-predefined_fold-4.arff"...
DEBUG Parsing meta-data from file "python/tests/res/data/emotions-predefined.xml"...
DEBUG Reading input data from file "python/tests/res/data/emotions-predefined_fold-5.arff"...
DEBUG Parsing meta-data from file "python/tests/res/data/emotions-predefined.xml"...
DEBUG Reading input data from file "python/tests/res/data/emotions-predefined_fold-6.arff"...
DEBUG Parsing meta-data from file "python/tests/res/data/emotions-predefined.xml"...
DEBUG Reading input data from file "python/tests/res/data/emotions-predefined_fold-7.arff"...
DEBUG Parsing meta-data from file "python/tests/res/data/emotions-predefined.xml"...
DEBUG Reading input data from file "python/tests/res/data/emotions-predefined_fold-8.arff"...
DEBUG Parsing meta-data from file "python/tests/res/data/emotions-predefined.xml"...
DEBUG Reading input data from file "python/tests/res/data/emotions-predefined_fold-9.arff"...
DEBUG Parsing meta-data from file "python/tests/res/data/emotions-predefined.xml"...
DEBUG Reading input data from file "python/tests/res/data/emotions-predefined_fold-10.arff"...
DEBUG Parsing meta-data from file "python/tests/res/data/emotions-predefined.xml"...
INFO Fitting model to 534 training examples...
DEBUG A dense matrix is used to store the feature values of the training examples
DEBUG A dense matrix is used to store the labels of the training examples
INFO Successfully fit model in <duration>
DEBUG Reading input data from file "python/tests/res/data/emotions-predefined_fold-1.arff"...
DEBUG Parsing meta-data from file "python/tests/res/data/emotions-predefined.xml"...
INFO Predicting for 59 test examples...
DEBUG A dense matrix is used to store the feature values of the query examples
DEBUG A dense matrix is used to store the predicted labels
INFO Successfully predicted in <duration>
INFO Evaluation result for test data (Fold 1):

Example-wise F1         62.66
Example-wise Jaccard    53.67
Example-wise Precision  75.14
Example-wise Recall     64.41
Hamming Accuracy        80.51
Hamming Loss            19.49
Macro F1                66.2
Macro Jaccard           50.05
Macro Precision         73.83
Macro Recall            61.07
Micro F1                66.67
Micro Jaccard           50
Micro Precision         71.88
Micro Recall            62.16
Subset 0/1 Loss         72.88
Subset Accuracy         27.12

DEBUG Writing output data to file "python/tests/res/tmp/results/evaluation_test_fold-1.csv"...
INFO Fold 2 / 10:
INFO Fitting model to 534 training examples...
DEBUG A dense matrix is used to store the feature values of the training examples
DEBUG A dense matrix is used to store the labels of the training examples
INFO Successfully fit model in <duration>
INFO Predicting for 59 test examples...
DEBUG A dense matrix is used to store the feature values of the query examples
DEBUG A dense matrix is used to store the predicted labels
INFO Successfully predicted in <duration>
INFO Evaluation result for test data (Fold 2):

Example-wise F1         65.42
Example-wise Jaccard    59.46
Example-wise Precision  74.86
Example-wise Recall     64.69
Hamming Accuracy        82.49
Hamming Loss            17.51
Macro F1                67.33
Macro Jaccard           51.87
Macro Precision         75.89
Macro Recall            62.12
Micro F1                69.61
Micro Jaccard           53.38
Micro Precision         75.53
Micro Recall            64.55
Subset 0/1 Loss         57.63
Subset Accuracy         42.37

DEBUG Writing output data to file "python/tests/res/tmp/results/evaluation_test_fold-2.csv"...
INFO Fold 3 / 10:
INFO Fitting model to 533 training examples...
DEBUG A dense matrix is used to store the feature values of the training examples
DEBUG A dense matrix is used to store the labels of the training examples
INFO Successfully fit model in <duration>
INFO Predicting for 60 test examples...
DEBUG A dense matrix is used to store the feature values of the query examples
DEBUG A dense matrix is used to store the predicted labels
INFO Successfully predicted in <duration>
INFO Evaluation result for test data (Fold 3):

Example-wise F1         66.06
Example-wise Jaccard    59.44
Example-wise Precision  81.39
Example-wise Recall     64.17
Hamming Accuracy        83.89
Hamming Loss            16.11
Macro F1                68.99
Macro Jaccard           54.45
Macro Precision         79.64
Macro Recall            63.19
Micro F1                71.84
Micro Jaccard           56.06
Micro Precision         79.57
Micro Recall            65.49
Subset 0/1 Loss         61.67
Subset Accuracy         38.33

DEBUG Writing output data to file "python/tests/res/tmp/results/evaluation_test_fold-3.csv"...
INFO Fold 4 / 10:
INFO Fitting model to 534 training examples...
DEBUG A dense matrix is used to store the feature values of the training examples
DEBUG A dense matrix is used to store the labels of the training examples
INFO Successfully fit model in <duration>
INFO Predicting for 59 test examples...
DEBUG A dense matrix is used to store the feature values of the query examples
DEBUG A dense matrix is used to store the predicted labels
INFO Successfully predicted in <duration>
INFO Evaluation result for test data (Fold 4):

Example-wise F1         63.28
Example-wise Jaccard    53.25
Example-wise Precision  78.25
Example-wise Recall     63.28
Hamming Accuracy        82.2
Hamming Loss            17.8
Macro F1                66.1
Macro Jaccard           52.52
Macro Precision         73.18
Macro Recall            62.07
Micro F1                69.27
Micro Jaccard           52.99
Micro Precision         74.74
Micro Recall            64.55
Subset 0/1 Loss         77.97
Subset Accuracy         22.03

DEBUG Writing output data to file "python/tests/res/tmp/results/evaluation_test_fold-4.csv"...
INFO Fold 5 / 10:
INFO Fitting model to 534 training examples...
DEBUG A dense matrix is used to store the feature values of the training examples
DEBUG A dense matrix is used to store the labels of the training examples
INFO Successfully fit model in <duration>
INFO Predicting for 59 test examples...
DEBUG A dense matrix is used to store the feature values of the query examples
DEBUG A dense matrix is used to store the predicted labels
INFO Successfully predicted in <duration>
INFO Evaluation result for test data (Fold 5):

Example-wise F1         66.72
Example-wise Jaccard    59.04
Example-wise Precision  78.53
Example-wise Recall     65.82
Hamming Accuracy        83.9
Hamming Loss            16.1
Macro F1                68.09
Macro Jaccard           55.42
Macro Precision         75.56
Macro Recall            64.85
Micro F1                71.92
Micro Jaccard           56.15
Micro Precision         77.66
Micro Recall            66.97
Subset 0/1 Loss         64.41
Subset Accuracy         35.59

DEBUG Writing output data to file "python/tests/res/tmp/results/evaluation_test_fold-5.csv"...
INFO Fold 6 / 10:
INFO Fitting model to 534 training examples...
DEBUG A dense matrix is used to store the feature values of the training examples
DEBUG A dense matrix is used to store the labels of the training examples
INFO Successfully fit model in <duration>
INFO Predicting for 59 test examples...
DEBUG A dense matrix is used to store the feature values of the query examples
DEBUG A dense matrix is used to store the predicted labels
INFO Successfully predicted in <duration>
INFO Evaluation result for test data (Fold 6):

Example-wise F1         61.47
Example-wise Jaccard    52.97
Example-wise Precision  63.56
Example-wise Recall     67.23
Hamming Accuracy        78.81
Hamming Loss            21.19
Macro F1                63.4
Macro Jaccard           48.29
Macro Precision         64.44
Macro Recall            65.48
Micro F1                66.37
Micro Jaccard           49.66
Micro Precision         65.49
Micro Recall            67.27
Subset 0/1 Loss         74.58
Subset Accuracy         25.42

DEBUG Writing output data to file "python/tests/res/tmp/results/evaluation_test_fold-6.csv"...
INFO Fold 7 / 10:
INFO Fitting model to 533 training examples...
DEBUG A dense matrix is used to store the feature values of the training examples
DEBUG A dense matrix is used to store the labels of the training examples
INFO Successfully fit model in <duration>
INFO Predicting for 60 test examples...
DEBUG A dense matrix is used to store the feature values of the query examples
DEBUG A dense matrix is used to store the predicted labels
INFO Successfully predicted in <duration>
INFO Evaluation result for test data (Fold 7):

Example-wise F1         62.83
Example-wise Jaccard    56.25
Example-wise Precision  77.5
Example-wise Recall     61.39
Hamming Accuracy        81.94
Hamming Loss            18.06
Macro F1                66.6
Macro Jaccard           51.96
Macro Precision         75.73
Macro Recall            60.99
Micro F1                68.29
Micro Jaccard           51.85
Micro Precision         76.09
Micro Recall            61.95
Subset 0/1 Loss         63.33
Subset Accuracy         36.67

DEBUG Writing output data to file "python/tests/res/tmp/results/evaluation_test_fold-7.csv"...
INFO Fold 8 / 10:
INFO Fitting model to 534 training examples...
DEBUG A dense matrix is used to store the feature values of the training examples
DEBUG A dense matrix is used to store the labels of the training examples
INFO Successfully fit model in <duration>
INFO Predicting for 59 test examples...
DEBUG A dense matrix is used to store the feature values of the query examples
DEBUG A dense matrix is used to store the predicted labels
INFO Successfully predicted in <duration>
INFO Evaluation result for test data (Fold 8):

Example-wise F1         63.62
Example-wise Jaccard    55.23
Example-wise Precision  69.49
Example-wise Recall     68.64
Hamming Accuracy        80.79
Hamming Loss            19.21
Macro F1                68.59
Macro Jaccard           52.64
Macro Precision         73.67
Macro Recall            66.66
Micro F1                68.22
Micro Jaccard           51.77
Micro Precision         69.52
Micro Recall            66.97
Subset 0/1 Loss         72.88
Subset Accuracy         27.12

DEBUG Writing output data to file "python/tests/res/tmp/results/evaluation_test_fold-8.csv"...
INFO Fold 9 / 10:
INFO Fitting model to 534 training examples...
DEBUG A dense matrix is used to store the feature values of the training examples
DEBUG A dense matrix is used to store the labels of the training examples
INFO Successfully fit model in <duration>
INFO Predicting for 59 test examples...
DEBUG A dense matrix is used to store the feature values of the query examples
DEBUG A dense matrix is used to store the predicted labels
INFO Successfully predicted in <duration>
INFO Evaluation result for test data (Fold 9):

Example-wise F1         64.46
Example-wise Jaccard    56.36
Example-wise Precision  73.16
Example-wise Recall     67.23
Hamming Accuracy        80.79
Hamming Loss            19.21
Macro F1                66.19
Macro Jaccard           50.47
Macro Precision         69.38
Macro Recall            64.83
Micro F1                68.22
Micro Jaccard           51.77
Micro Precision         70.19
Micro Recall            66.36
Subset 0/1 Loss         67.8
Subset Accuracy         32.2

DEBUG Writing output data to file "python/tests/res/tmp/results/evaluation_test_fold-9.csv"...
INFO Fold 10 / 10:
INFO Fitting model to 533 training examples...
DEBUG A dense matrix is used to store the feature values of the training examples
DEBUG A dense matrix is used to store the labels of the training examples
INFO Successfully fit model in <duration>
INFO Predicting for 60 test examples...
DEBUG A dense matrix is used to store the feature values of the query examples
DEBUG A dense matrix is used to store the predicted labels
INFO Successfully predicted in <duration>
INFO Evaluation result for test data (Fold 10):

Example-wise F1         59.72
Example-wise Jaccard    51.53
Example-wise Precision  69.72
Example-wise Recall     62.22
Hamming Accuracy        79.17
Hamming Loss            20.83
Macro F1                61.75
Macro Jaccard           46.43
Macro Precision         66.51
Macro Recall            60.93
Micro F1                65.44
Micro Jaccard           48.63
Micro Precision         68.27
Micro Recall            62.83
Subset 0/1 Loss         75
Subset Accuracy         25

INFO Evaluation result for test data (Average across 10 folds):

Example-wise F1         63.62  ±2.03
Example-wise Jaccard    55.72  ±2.74
Example-wise Precision  74.16  ±5.06
Example-wise Recall     64.91  ±2.21
Hamming Accuracy        81.45  ±1.67
Hamming Loss            18.55  ±1.67
Macro F1                66.32  ±2.15
Macro Jaccard           51.41  ±2.57
Macro Precision         72.78  ±4.42
Macro Recall            63.22  ±1.99
Micro F1                68.59  ±2.05
Micro Jaccard           52.23  ±2.39
Micro Precision         72.89  ±4.29
Micro Recall            64.91  ±1.94
Subset 0/1 Loss         68.81  ±6.44
Subset Accuracy         31.19  ±6.44

DEBUG Writing output data to file "python/tests/res/tmp/results/evaluation_test_fold-10.csv"...
DEBUG Writing output data to file "python/tests/res/tmp/results/evaluation_test.csv"...
INFO Successfully finished after <duration>
