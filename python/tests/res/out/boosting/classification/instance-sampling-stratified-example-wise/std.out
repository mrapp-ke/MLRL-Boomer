mlrl-testbed mlrl.boosting --log-level debug --base-dir python/tests/res/tmp --data-dir python/tests/res/data --dataset emotions --result-dir results --save-evaluation true --instance-sampling stratified-example-wise
Starting experiment using the classification algorithm "BoomerClassifier"...
Using separate training and test sets...
Reading input data from file "python/tests/res/data/emotions.arff"...
Parsing meta-data from file "python/tests/res/data/emotions.xml"...
Fitting model to 397 training examples...
A dense matrix is used to store the feature values of the training examples
A dense matrix is used to store the labels of the training examples
Successfully fit model in <duration>
Predicting for 196 test examples...
A dense matrix is used to store the feature values of the query examples
A dense matrix is used to store the predicted labels
Successfully predicted in <duration>
Evaluation result for test data:

Example-wise F1         60
Example-wise Jaccard    52
Example-wise Precision  79.51
Example-wise Recall     59.61
Hamming Accuracy        80.7
Hamming Loss            19.3
Macro F1                63.58
Macro Jaccard           47.54
Macro Precision         75.47
Macro Recall            57.02
Micro F1                65.86
Micro Jaccard           49.1
Micro Precision         75.52
Micro Recall            58.4
Subset 0/1 Loss         73.47
Subset Accuracy         26.53

Writing output data to file "python/tests/res/tmp/results/evaluation_test.csv"...
Successfully finished experiment after <duration>
