mlrl-testbed mlrl.boosting --log-level debug --data-dir python/tests/res/data --dataset emotions --output-dir python/tests/res/tmp/results --rule-induction top-down-beam-search
INFO Starting experiment using the classification algorithm "BoomerClassifier"...
INFO Using separate training and test sets...
DEBUG Reading input data from file "python/tests/res/data/emotions.arff"...
DEBUG Parsing meta-data from file "python/tests/res/data/emotions.xml"...
INFO Fitting model to 397 training examples...
DEBUG A dense matrix is used to store the feature values of the training examples
DEBUG A dense matrix is used to store the labels of the training examples
INFO Successfully fit model in <duration>
INFO Predicting for 196 test examples...
DEBUG A dense matrix is used to store the feature values of the query examples
DEBUG A dense matrix is used to store the predicted labels
INFO Successfully predicted in <duration>
INFO Evaluation result for test data:

Example-wise F1         60.31
Example-wise Jaccard    52.93
Example-wise Precision  77.64
Example-wise Recall     60.03
Hamming Accuracy        80.53
Hamming Loss            19.47
Macro F1                63.8
Macro Jaccard           47.81
Macro Precision         75.01
Macro Recall            57.8
Micro F1                65.87
Micro Jaccard           49.11
Micro Precision         74.66
Micro Recall            58.93
Subset 0/1 Loss         70.41
Subset Accuracy         29.59

DEBUG Writing output data to file "python/tests/res/tmp/results/evaluation_test.csv"...
INFO Successfully finished after <duration>
