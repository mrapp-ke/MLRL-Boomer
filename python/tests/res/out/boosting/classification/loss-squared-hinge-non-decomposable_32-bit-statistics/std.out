mlrl-testbed mlrl.boosting --log-level DEBUG --data-dir python/tests/res/data --dataset emotions --output-dir python/tests/res/tmp/results --loss squared-hinge-non-decomposable --statistic-type 32-bit
INFO Starting experiment using the classification algorithm "BoomerClassifier"...
INFO Using separate training and test sets...
DEBUG Reading input data from file "python/tests/res/data/emotions.arff"...
DEBUG Parsing meta-data from file "python/tests/res/data/emotions.xml"...
INFO Fitting model to 397 training examples...
DEBUG A dense matrix is used to store the feature values of the training examples
DEBUG A dense matrix is used to store the labels of the training examples
INFO Successfully fit model in <duration>
INFO Predicting for 196 test examples...
DEBUG A dense matrix is used to store the feature values of the query examples
DEBUG A dense matrix is used to store the predicted labels
INFO Successfully predicted in <duration>
INFO Evaluation result for test data:

Example-wise F1         55.94
Example-wise Jaccard    47.79
Example-wise Precision  61.48
Example-wise Recall     56.38
Hamming Accuracy        76.28
Hamming Loss            23.72
Macro F1                58.88
Macro Jaccard           42.52
Macro Precision         63.5
Macro Recall            55.09
Micro F1                60.31
Micro Jaccard           43.18
Micro Precision         64.63
Micro Recall            56.53
Subset 0/1 Loss         77.04
Subset Accuracy         22.96

DEBUG Writing output data to file "python/tests/res/tmp/results/evaluation_test.csv"...
INFO Successfully finished after <duration>
