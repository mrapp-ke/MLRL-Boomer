mlrl-testbed mlrl.boosting --log-level debug --data-dir python/tests/res/data --dataset emotions --output-dir python/tests/res/tmp/results --instance-sampling with-replacement
INFO Starting experiment using the classification algorithm "BoomerClassifier"...
INFO Using separate training and test sets...
DEBUG Reading input data from file "python/tests/res/data/emotions.arff"...
DEBUG Parsing meta-data from file "python/tests/res/data/emotions.xml"...
INFO Fitting model to 397 training examples...
DEBUG A dense matrix is used to store the feature values of the training examples
DEBUG A dense matrix is used to store the labels of the training examples
INFO Successfully fit model in <duration>
INFO Predicting for 196 test examples...
DEBUG A dense matrix is used to store the feature values of the query examples
DEBUG A dense matrix is used to store the predicted labels
INFO Successfully predicted in <duration>
INFO Evaluation result for test data:

Example-wise F1         61.16
Example-wise Jaccard    53.74
Example-wise Precision  77.64
Example-wise Recall     61.39
Hamming Accuracy        80.95
Hamming Loss            19.05
Macro F1                64.73
Macro Jaccard           49.08
Macro Precision         73.86
Macro Recall            58.97
Micro F1                66.86
Micro Jaccard           50.22
Micro Precision         75.08
Micro Recall            60.27
Subset 0/1 Loss         69.9
Subset Accuracy         30.1

DEBUG Writing output data to file "python/tests/res/tmp/results/evaluation_test.csv"...
INFO Successfully finished after <duration>
