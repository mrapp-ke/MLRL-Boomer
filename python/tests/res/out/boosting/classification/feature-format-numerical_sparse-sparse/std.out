mlrl-testbed mlrl.boosting --log-level debug --data-dir python/tests/res/data --dataset langlog --base-dir python/tests/res/tmp --result-dir results --save-evaluation true --feature-format sparse
Starting experiment using the classification algorithm "BoomerClassifier"...
Using separate training and test sets...
Reading input data from file "python/tests/res/data/langlog.arff"...
Parsing meta-data from file "python/tests/res/data/langlog.xml"...
Fitting model to 978 training examples...
A sparse matrix with sparse value 0.0 is used to store the feature values of the training examples
A sparse matrix is used to store the labels of the training examples
Successfully fit model in <duration>
Predicting for 482 test examples...
A sparse matrix with sparse value 0.0 is used to store the feature values of the query examples
A sparse matrix is used to store the predicted labels
Successfully predicted in <duration>
Evaluation result for test data:

Example-wise F1         22.2
Example-wise Jaccard    21.78
Example-wise Precision  97.41
Example-wise Recall     21.82
Hamming Accuracy        98.53
Hamming Loss             1.47
Macro F1                10.74
Macro Jaccard            9.69
Macro Precision         94.09
Macro Recall             9.78
Micro F1                13.61
Micro Jaccard            7.3
Micro Precision         76.36
Micro Recall             7.47
Subset 0/1 Loss         79.25
Subset Accuracy         20.75

Writing output data to file "python/tests/res/tmp/results/evaluation_test.csv"...
Successfully finished after <duration>
