mlrl-testbed mlrl.boosting --log-level debug --data-dir python/tests/res/data --dataset emotions-ordinal --base-dir python/tests/res/tmp --result-dir results --save-evaluation true --feature-format sparse
Starting experiment using the classification algorithm "BoomerClassifier"...
Using separate training and test sets...
Reading input data from file "python/tests/res/data/emotions-ordinal.arff"...
Parsing meta-data from file "python/tests/res/data/emotions-ordinal.xml"...
Fitting model to 397 training examples...
A sparse matrix with sparse value 0.0 is used to store the feature values of the training examples
A dense matrix is used to store the labels of the training examples
Successfully fit model in <duration>
Predicting for 196 test examples...
A sparse matrix with sparse value 0.0 is used to store the feature values of the query examples
A dense matrix is used to store the predicted labels
Successfully predicted in <duration>
Evaluation result for test data:

Example-wise F1         61.87
Example-wise Jaccard    54.42
Example-wise Precision  77.72
Example-wise Recall     61.9
Hamming Accuracy        81.38
Hamming Loss            18.62
Macro F1                66.08
Macro Jaccard           50.21
Macro Precision         75.7
Macro Recall            59.99
Micro F1                67.65
Micro Jaccard           51.12
Micro Precision         75.83
Micro Recall            61.07
Subset 0/1 Loss         69.39
Subset Accuracy         30.61

Writing output data to file "python/tests/res/tmp/results/evaluation_test.csv"...
Successfully finished experiment after <duration>
