mlrl-testbed mlrl.boosting --log-level debug --data-dir python/tests/res/data --dataset emotions --base-dir python/tests/res/tmp --result-dir results --save-evaluation true --loss logistic-non-decomposable --statistic-type 32-bit
Starting experiment using the classification algorithm "BoomerClassifier"...
Using separate training and test sets...
Reading input data from file "python/tests/res/data/emotions.arff"...
Parsing meta-data from file "python/tests/res/data/emotions.xml"...
Fitting model to 397 training examples...
A dense matrix is used to store the feature values of the training examples
A dense matrix is used to store the labels of the training examples
Successfully fit model in <duration>
Predicting for 196 test examples...
A dense matrix is used to store the feature values of the query examples
A dense matrix is used to store the predicted labels
Successfully predicted in <duration>
Evaluation result for test data:

Example-wise F1         64.93
Example-wise Jaccard    56.34
Example-wise Precision  71.51
Example-wise Recall     64.97
Hamming Accuracy        80.78
Hamming Loss            19.22
Macro F1                66
Macro Jaccard           50.24
Macro Precision         72.83
Macro Recall            62.45
Micro F1                67.9
Micro Jaccard           51.4
Micro Precision         72.64
Micro Recall            63.73
Subset 0/1 Loss         70.92
Subset Accuracy         29.08

Writing output data to file "python/tests/res/tmp/results/evaluation_test.csv"...
Successfully finished after <duration>
